
LedCube.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000017a8  0000183c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000133  0080012e  0080012e  0000186a  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  0000186a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000418  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00009e27  00000000  00000000  00001d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000017cb  00000000  00000000  0000bb4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000024df  00000000  00000000  0000d316  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d84  00000000  00000000  0000f7f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002478  00000000  00000000  0001057c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000534e  00000000  00000000  000129f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000005d0  00000000  00000000  00017d42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__dtors_end>
       4:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
       8:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
       c:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      10:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      14:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      18:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      1c:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      20:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      24:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      28:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      2c:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      30:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      34:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      38:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      3c:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      40:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__vector_16>
      44:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      48:	0c 94 89 08 	jmp	0x1112	; 0x1112 <__vector_18>
      4c:	0c 94 bb 08 	jmp	0x1176	; 0x1176 <__vector_19>
      50:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      54:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      58:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      5c:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      60:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>
      64:	0c 94 87 04 	jmp	0x90e	; 0x90e <__bad_interrupt>

00000068 <__trampolines_end>:
	...
      70:	7e 81       	ldd	r23, Y+6	; 0x06
      72:	a5 81       	ldd	r26, Z+5	; 0x05
      74:	bd 99       	sbic	0x17, 5	; 23
      76:	81 7e       	andi	r24, 0xE1	; 225
      78:	7e ff       	.word	0xff7e	; ????
      7a:	db ff       	.word	0xffdb	; ????
      7c:	c3 e7       	ldi	r28, 0x73	; 115
      7e:	ff 7e       	andi	r31, 0xEF	; 239
      80:	36 7f       	andi	r19, 0xF6	; 246
      82:	7f 7f       	andi	r23, 0xFF	; 255
      84:	3e 1c       	adc	r3, r14
      86:	08 00       	.word	0x0008	; ????
      88:	08 1c       	adc	r0, r8
      8a:	3e 7f       	andi	r19, 0xFE	; 254
      8c:	3e 1c       	adc	r3, r14
      8e:	08 00       	.word	0x0008	; ????
      90:	1c 3e       	cpi	r17, 0xEC	; 236
      92:	1c 7f       	andi	r17, 0xFC	; 252
      94:	7f 6b       	ori	r23, 0xBF	; 191
      96:	08 1c       	adc	r0, r8
      98:	08 08       	sbc	r0, r8
      9a:	1c 3e       	cpi	r17, 0xEC	; 236
      9c:	7f 3e       	cpi	r23, 0xEF	; 239
      9e:	08 1c       	adc	r0, r8
	...
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	f0 be       	out	0x30, r15	; 48
      c4:	33 33       	cpi	r19, 0x33	; 51
      c6:	33 1e       	adc	r3, r19
      c8:	3c 66       	ori	r19, 0x6C	; 108
      ca:	66 66       	ori	r22, 0x66	; 102
      cc:	3c 18       	sub	r3, r12
      ce:	7e 18       	sub	r7, r14
	...
      d8:	fe c6       	rjmp	.+3580   	; 0xed6 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x148>
      da:	fe c6       	rjmp	.+3580   	; 0xed8 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x14a>
      dc:	c6 e6       	ldi	r28, 0x66	; 102
      de:	67 03       	mulsu	r22, r23
      e0:	99 5a       	subi	r25, 0xA9	; 169
      e2:	3c e7       	ldi	r19, 0x7C	; 124
      e4:	e7 3c       	cpi	r30, 0xC7	; 199
      e6:	5a 99       	sbic	0x0b, 2	; 11
      e8:	01 07       	cpc	r16, r17
      ea:	1f 7f       	andi	r17, 0xFF	; 255
      ec:	1f 07       	cpc	r17, r31
      ee:	01 00       	.word	0x0001	; ????
      f0:	40 70       	andi	r20, 0x00	; 0
      f2:	7c 7f       	andi	r23, 0xFC	; 252
      f4:	7c 70       	andi	r23, 0x0C	; 12
      f6:	40 00       	.word	0x0040	; ????
      f8:	18 3c       	cpi	r17, 0xC8	; 200
      fa:	7e 18       	sub	r7, r14
      fc:	18 7e       	andi	r17, 0xE8	; 232
      fe:	3c 18       	sub	r3, r12
     100:	66 66       	ori	r22, 0x66	; 102
     102:	66 66       	ori	r22, 0x66	; 102
     104:	66 00       	.word	0x0066	; ????
     106:	66 00       	.word	0x0066	; ????
     108:	fe db       	rcall	.-2052   	; 0xfffff906 <__eeprom_end+0xff7ef906>
     10a:	db de       	rcall	.-586    	; 0xfffffec2 <__eeprom_end+0xff7efec2>
     10c:	d8 d8       	rcall	.-3664   	; 0xfffff2be <__eeprom_end+0xff7ef2be>
     10e:	d8 00       	.word	0x00d8	; ????
     110:	7e c3       	rjmp	.+1788   	; 0x80e <__FUSE_REGION_LENGTH__+0x40e>
     112:	1e 33       	cpi	r17, 0x3E	; 62
     114:	33 1e       	adc	r3, r19
     116:	31 1f       	adc	r19, r17
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	7e 7e       	andi	r23, 0xEE	; 238
     11e:	7e 00       	.word	0x007e	; ????
     120:	18 3c       	cpi	r17, 0xC8	; 200
     122:	7e 18       	sub	r7, r14
     124:	7e 3c       	cpi	r23, 0xCE	; 206
     126:	18 ff       	.word	0xff18	; ????
     128:	18 3c       	cpi	r17, 0xC8	; 200
     12a:	7e 18       	sub	r7, r14
     12c:	18 18       	sub	r1, r8
     12e:	18 00       	.word	0x0018	; ????
     130:	18 18       	sub	r1, r8
     132:	18 18       	sub	r1, r8
     134:	7e 3c       	cpi	r23, 0xCE	; 206
     136:	18 00       	.word	0x0018	; ????
     138:	00 18       	sub	r0, r0
     13a:	30 7f       	andi	r19, 0xF0	; 240
     13c:	30 18       	sub	r3, r0
     13e:	00 00       	nop
     140:	00 0c       	add	r0, r0
     142:	06 7f       	andi	r16, 0xF6	; 246
     144:	06 0c       	add	r0, r6
     146:	00 00       	nop
     148:	00 00       	nop
     14a:	03 03       	mulsu	r16, r19
     14c:	03 7f       	andi	r16, 0xF3	; 243
     14e:	00 00       	nop
     150:	00 24       	eor	r0, r0
     152:	66 ff       	sbrs	r22, 6
     154:	66 24       	eor	r6, r6
     156:	00 00       	nop
     158:	00 18       	sub	r0, r0
     15a:	3c 7e       	andi	r19, 0xEC	; 236
     15c:	ff ff       	.word	0xffff	; ????
     15e:	00 00       	nop
     160:	00 ff       	sbrs	r16, 0
     162:	ff 7e       	andi	r31, 0xEF	; 239
     164:	3c 18       	sub	r3, r12
	...
     16e:	00 00       	nop
     170:	0c 1e       	adc	r0, r28
     172:	1e 0c       	add	r1, r14
     174:	0c 00       	.word	0x000c	; ????
     176:	0c 00       	.word	0x000c	; ????
     178:	36 36       	cpi	r19, 0x66	; 102
     17a:	36 00       	.word	0x0036	; ????
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	36 36       	cpi	r19, 0x66	; 102
     182:	7f 36       	cpi	r23, 0x6F	; 111
     184:	7f 36       	cpi	r23, 0x6F	; 111
     186:	36 00       	.word	0x0036	; ????
     188:	0c 3e       	cpi	r16, 0xEC	; 236
     18a:	03 1e       	adc	r0, r19
     18c:	30 1f       	adc	r19, r16
     18e:	0c 00       	.word	0x000c	; ????
     190:	00 63       	ori	r16, 0x30	; 48
     192:	33 18       	sub	r3, r3
     194:	0c 66       	ori	r16, 0x6C	; 108
     196:	63 00       	.word	0x0063	; ????
     198:	1c 36       	cpi	r17, 0x6C	; 108
     19a:	1c 6e       	ori	r17, 0xEC	; 236
     19c:	3b 33       	cpi	r19, 0x3B	; 59
     19e:	6e 00       	.word	0x006e	; ????
     1a0:	06 06       	cpc	r0, r22
     1a2:	03 00       	.word	0x0003	; ????
     1a4:	00 00       	nop
     1a6:	00 00       	nop
     1a8:	18 0c       	add	r1, r8
     1aa:	06 06       	cpc	r0, r22
     1ac:	06 0c       	add	r0, r6
     1ae:	18 00       	.word	0x0018	; ????
     1b0:	06 0c       	add	r0, r6
     1b2:	18 18       	sub	r1, r8
     1b4:	18 0c       	add	r1, r8
     1b6:	06 00       	.word	0x0006	; ????
     1b8:	00 66       	ori	r16, 0x60	; 96
     1ba:	3c ff       	.word	0xff3c	; ????
     1bc:	3c 66       	ori	r19, 0x6C	; 108
     1be:	00 00       	nop
     1c0:	00 0c       	add	r0, r0
     1c2:	0c 3f       	cpi	r16, 0xFC	; 252
     1c4:	0c 0c       	add	r0, r12
     1c6:	00 00       	nop
     1c8:	00 00       	nop
     1ca:	00 00       	nop
     1cc:	00 0e       	add	r0, r16
     1ce:	0c 06       	cpc	r0, r28
     1d0:	00 00       	nop
     1d2:	00 3f       	cpi	r16, 0xF0	; 240
	...
     1dc:	00 0c       	add	r0, r0
     1de:	0c 00       	.word	0x000c	; ????
     1e0:	60 30       	cpi	r22, 0x00	; 0
     1e2:	18 0c       	add	r1, r8
     1e4:	06 03       	mulsu	r16, r22
     1e6:	01 00       	.word	0x0001	; ????
     1e8:	1e 33       	cpi	r17, 0x3E	; 62
     1ea:	3b 3f       	cpi	r19, 0xFB	; 251
     1ec:	37 33       	cpi	r19, 0x37	; 55
     1ee:	1e 00       	.word	0x001e	; ????
     1f0:	0c 0f       	add	r16, r28
     1f2:	0c 0c       	add	r0, r12
     1f4:	0c 0c       	add	r0, r12
     1f6:	3f 00       	.word	0x003f	; ????
     1f8:	1e 33       	cpi	r17, 0x3E	; 62
     1fa:	30 1c       	adc	r3, r0
     1fc:	06 33       	cpi	r16, 0x36	; 54
     1fe:	3f 00       	.word	0x003f	; ????
     200:	1e 33       	cpi	r17, 0x3E	; 62
     202:	30 1c       	adc	r3, r0
     204:	30 33       	cpi	r19, 0x30	; 48
     206:	1e 00       	.word	0x001e	; ????
     208:	38 3c       	cpi	r19, 0xC8	; 200
     20a:	36 33       	cpi	r19, 0x36	; 54
     20c:	7f 30       	cpi	r23, 0x0F	; 15
     20e:	30 00       	.word	0x0030	; ????
     210:	3f 03       	fmul	r19, r23
     212:	1f 30       	cpi	r17, 0x0F	; 15
     214:	30 33       	cpi	r19, 0x30	; 48
     216:	1e 00       	.word	0x001e	; ????
     218:	1c 06       	cpc	r1, r28
     21a:	03 1f       	adc	r16, r19
     21c:	33 33       	cpi	r19, 0x33	; 51
     21e:	1e 00       	.word	0x001e	; ????
     220:	3f 33       	cpi	r19, 0x3F	; 63
     222:	30 18       	sub	r3, r0
     224:	0c 06       	cpc	r0, r28
     226:	06 00       	.word	0x0006	; ????
     228:	1e 33       	cpi	r17, 0x3E	; 62
     22a:	33 1e       	adc	r3, r19
     22c:	33 33       	cpi	r19, 0x33	; 51
     22e:	1e 00       	.word	0x001e	; ????
     230:	1e 33       	cpi	r17, 0x3E	; 62
     232:	33 3e       	cpi	r19, 0xE3	; 227
     234:	30 18       	sub	r3, r0
     236:	0e 00       	.word	0x000e	; ????
     238:	00 00       	nop
     23a:	0c 0c       	add	r0, r12
     23c:	00 0c       	add	r0, r0
     23e:	0c 00       	.word	0x000c	; ????
     240:	00 00       	nop
     242:	0c 0c       	add	r0, r12
     244:	00 0e       	add	r0, r16
     246:	0c 06       	cpc	r0, r28
     248:	18 0c       	add	r1, r8
     24a:	06 03       	mulsu	r16, r22
     24c:	06 0c       	add	r0, r6
     24e:	18 00       	.word	0x0018	; ????
     250:	00 00       	nop
     252:	3f 00       	.word	0x003f	; ????
     254:	3f 00       	.word	0x003f	; ????
     256:	00 00       	nop
     258:	06 0c       	add	r0, r6
     25a:	18 30       	cpi	r17, 0x08	; 8
     25c:	18 0c       	add	r1, r8
     25e:	06 00       	.word	0x0006	; ????
     260:	1e 33       	cpi	r17, 0x3E	; 62
     262:	30 18       	sub	r3, r0
     264:	0c 00       	.word	0x000c	; ????
     266:	0c 00       	.word	0x000c	; ????
     268:	3e 63       	ori	r19, 0x3E	; 62
     26a:	7b 7b       	andi	r23, 0xBB	; 187
     26c:	7b 03       	fmul	r23, r19
     26e:	1e 00       	.word	0x001e	; ????
     270:	0c 1e       	adc	r0, r28
     272:	33 33       	cpi	r19, 0x33	; 51
     274:	3f 33       	cpi	r19, 0x3F	; 63
     276:	33 00       	.word	0x0033	; ????
     278:	3f 66       	ori	r19, 0x6F	; 111
     27a:	66 3e       	cpi	r22, 0xE6	; 230
     27c:	66 66       	ori	r22, 0x66	; 102
     27e:	3f 00       	.word	0x003f	; ????
     280:	3c 66       	ori	r19, 0x6C	; 108
     282:	03 03       	mulsu	r16, r19
     284:	03 66       	ori	r16, 0x63	; 99
     286:	3c 00       	.word	0x003c	; ????
     288:	3f 36       	cpi	r19, 0x6F	; 111
     28a:	66 66       	ori	r22, 0x66	; 102
     28c:	66 36       	cpi	r22, 0x66	; 102
     28e:	3f 00       	.word	0x003f	; ????
     290:	7f 46       	sbci	r23, 0x6F	; 111
     292:	16 1e       	adc	r1, r22
     294:	16 46       	sbci	r17, 0x66	; 102
     296:	7f 00       	.word	0x007f	; ????
     298:	7f 46       	sbci	r23, 0x6F	; 111
     29a:	16 1e       	adc	r1, r22
     29c:	16 06       	cpc	r1, r22
     29e:	0f 00       	.word	0x000f	; ????
     2a0:	3c 66       	ori	r19, 0x6C	; 108
     2a2:	03 03       	mulsu	r16, r19
     2a4:	73 66       	ori	r23, 0x63	; 99
     2a6:	7c 00       	.word	0x007c	; ????
     2a8:	33 33       	cpi	r19, 0x33	; 51
     2aa:	33 3f       	cpi	r19, 0xF3	; 243
     2ac:	33 33       	cpi	r19, 0x33	; 51
     2ae:	33 00       	.word	0x0033	; ????
     2b0:	1e 0c       	add	r1, r14
     2b2:	0c 0c       	add	r0, r12
     2b4:	0c 0c       	add	r0, r12
     2b6:	1e 00       	.word	0x001e	; ????
     2b8:	78 30       	cpi	r23, 0x08	; 8
     2ba:	30 30       	cpi	r19, 0x00	; 0
     2bc:	33 33       	cpi	r19, 0x33	; 51
     2be:	1e 00       	.word	0x001e	; ????
     2c0:	67 66       	ori	r22, 0x67	; 103
     2c2:	36 1e       	adc	r3, r22
     2c4:	36 66       	ori	r19, 0x66	; 102
     2c6:	67 00       	.word	0x0067	; ????
     2c8:	0f 06       	cpc	r0, r31
     2ca:	06 06       	cpc	r0, r22
     2cc:	46 66       	ori	r20, 0x66	; 102
     2ce:	7f 00       	.word	0x007f	; ????
     2d0:	63 77       	andi	r22, 0x73	; 115
     2d2:	7f 6b       	ori	r23, 0xBF	; 191
     2d4:	63 63       	ori	r22, 0x33	; 51
     2d6:	63 00       	.word	0x0063	; ????
     2d8:	63 67       	ori	r22, 0x73	; 115
     2da:	6f 7b       	andi	r22, 0xBF	; 191
     2dc:	73 63       	ori	r23, 0x33	; 51
     2de:	63 00       	.word	0x0063	; ????
     2e0:	1c 36       	cpi	r17, 0x6C	; 108
     2e2:	63 63       	ori	r22, 0x33	; 51
     2e4:	63 36       	cpi	r22, 0x63	; 99
     2e6:	1c 00       	.word	0x001c	; ????
     2e8:	3f 66       	ori	r19, 0x6F	; 111
     2ea:	66 3e       	cpi	r22, 0xE6	; 230
     2ec:	06 06       	cpc	r0, r22
     2ee:	0f 00       	.word	0x000f	; ????
     2f0:	1e 33       	cpi	r17, 0x3E	; 62
     2f2:	33 33       	cpi	r19, 0x33	; 51
     2f4:	3b 1e       	adc	r3, r27
     2f6:	38 00       	.word	0x0038	; ????
     2f8:	3f 66       	ori	r19, 0x6F	; 111
     2fa:	66 3e       	cpi	r22, 0xE6	; 230
     2fc:	1e 36       	cpi	r17, 0x6E	; 110
     2fe:	67 00       	.word	0x0067	; ????
     300:	1e 33       	cpi	r17, 0x3E	; 62
     302:	07 1c       	adc	r0, r7
     304:	38 33       	cpi	r19, 0x38	; 56
     306:	1e 00       	.word	0x001e	; ????
     308:	3f 2d       	mov	r19, r15
     30a:	0c 0c       	add	r0, r12
     30c:	0c 0c       	add	r0, r12
     30e:	1e 00       	.word	0x001e	; ????
     310:	33 33       	cpi	r19, 0x33	; 51
     312:	33 33       	cpi	r19, 0x33	; 51
     314:	33 33       	cpi	r19, 0x33	; 51
     316:	3f 00       	.word	0x003f	; ????
     318:	33 33       	cpi	r19, 0x33	; 51
     31a:	33 33       	cpi	r19, 0x33	; 51
     31c:	33 1e       	adc	r3, r19
     31e:	0c 00       	.word	0x000c	; ????
     320:	63 63       	ori	r22, 0x33	; 51
     322:	63 6b       	ori	r22, 0xB3	; 179
     324:	7f 77       	andi	r23, 0x7F	; 127
     326:	63 00       	.word	0x0063	; ????
     328:	63 63       	ori	r22, 0x33	; 51
     32a:	36 1c       	adc	r3, r6
     32c:	36 63       	ori	r19, 0x36	; 54
     32e:	63 00       	.word	0x0063	; ????
     330:	33 33       	cpi	r19, 0x33	; 51
     332:	33 1e       	adc	r3, r19
     334:	0c 0c       	add	r0, r12
     336:	1e 00       	.word	0x001e	; ????
     338:	7f 33       	cpi	r23, 0x3F	; 63
     33a:	19 0c       	add	r1, r9
     33c:	46 63       	ori	r20, 0x36	; 54
     33e:	7f 00       	.word	0x007f	; ????
     340:	1e 06       	cpc	r1, r30
     342:	06 06       	cpc	r0, r22
     344:	06 06       	cpc	r0, r22
     346:	1e 00       	.word	0x001e	; ????
     348:	03 06       	cpc	r0, r19
     34a:	0c 18       	sub	r0, r12
     34c:	30 60       	ori	r19, 0x00	; 0
     34e:	40 00       	.word	0x0040	; ????
     350:	1e 18       	sub	r1, r14
     352:	18 18       	sub	r1, r8
     354:	18 18       	sub	r1, r8
     356:	1e 00       	.word	0x001e	; ????
     358:	08 1c       	adc	r0, r8
     35a:	36 63       	ori	r19, 0x36	; 54
	...
     364:	00 00       	nop
     366:	00 ff       	sbrs	r16, 0
     368:	0c 0c       	add	r0, r12
     36a:	18 00       	.word	0x0018	; ????
     36c:	00 00       	nop
     36e:	00 00       	nop
     370:	00 00       	nop
     372:	1e 30       	cpi	r17, 0x0E	; 14
     374:	3e 33       	cpi	r19, 0x3E	; 62
     376:	6e 00       	.word	0x006e	; ????
     378:	07 06       	cpc	r0, r23
     37a:	3e 66       	ori	r19, 0x6E	; 110
     37c:	66 66       	ori	r22, 0x66	; 102
     37e:	3d 00       	.word	0x003d	; ????
     380:	00 00       	nop
     382:	1e 33       	cpi	r17, 0x3E	; 62
     384:	03 33       	cpi	r16, 0x33	; 51
     386:	1e 00       	.word	0x001e	; ????
     388:	38 30       	cpi	r19, 0x08	; 8
     38a:	30 3e       	cpi	r19, 0xE0	; 224
     38c:	33 33       	cpi	r19, 0x33	; 51
     38e:	6e 00       	.word	0x006e	; ????
     390:	00 00       	nop
     392:	1e 33       	cpi	r17, 0x3E	; 62
     394:	3f 03       	fmul	r19, r23
     396:	1e 00       	.word	0x001e	; ????
     398:	1c 36       	cpi	r17, 0x6C	; 108
     39a:	06 0f       	add	r16, r22
     39c:	06 06       	cpc	r0, r22
     39e:	0f 00       	.word	0x000f	; ????
     3a0:	00 00       	nop
     3a2:	6e 33       	cpi	r22, 0x3E	; 62
     3a4:	33 3e       	cpi	r19, 0xE3	; 227
     3a6:	30 1f       	adc	r19, r16
     3a8:	07 06       	cpc	r0, r23
     3aa:	36 6e       	ori	r19, 0xE6	; 230
     3ac:	66 66       	ori	r22, 0x66	; 102
     3ae:	67 00       	.word	0x0067	; ????
     3b0:	0c 00       	.word	0x000c	; ????
     3b2:	0e 0c       	add	r0, r14
     3b4:	0c 0c       	add	r0, r12
     3b6:	1e 00       	.word	0x001e	; ????
     3b8:	18 00       	.word	0x0018	; ????
     3ba:	1e 18       	sub	r1, r14
     3bc:	18 18       	sub	r1, r8
     3be:	1b 0e       	add	r1, r27
     3c0:	07 06       	cpc	r0, r23
     3c2:	66 36       	cpi	r22, 0x66	; 102
     3c4:	1e 36       	cpi	r17, 0x6E	; 110
     3c6:	67 00       	.word	0x0067	; ????
     3c8:	0e 0c       	add	r0, r14
     3ca:	0c 0c       	add	r0, r12
     3cc:	0c 0c       	add	r0, r12
     3ce:	1e 00       	.word	0x001e	; ????
     3d0:	00 00       	nop
     3d2:	37 7f       	andi	r19, 0xF7	; 247
     3d4:	6b 63       	ori	r22, 0x3B	; 59
     3d6:	63 00       	.word	0x0063	; ????
     3d8:	00 00       	nop
     3da:	1f 33       	cpi	r17, 0x3F	; 63
     3dc:	33 33       	cpi	r19, 0x33	; 51
     3de:	33 00       	.word	0x0033	; ????
     3e0:	00 00       	nop
     3e2:	1e 33       	cpi	r17, 0x3E	; 62
     3e4:	33 33       	cpi	r19, 0x33	; 51
     3e6:	1e 00       	.word	0x001e	; ????
     3e8:	00 00       	nop
     3ea:	3b 66       	ori	r19, 0x6B	; 107
     3ec:	66 3e       	cpi	r22, 0xE6	; 230
     3ee:	06 0f       	add	r16, r22
     3f0:	00 00       	nop
     3f2:	6e 33       	cpi	r22, 0x3E	; 62
     3f4:	33 3e       	cpi	r19, 0xE3	; 227
     3f6:	30 78       	andi	r19, 0x80	; 128
     3f8:	00 00       	nop
     3fa:	1b 36       	cpi	r17, 0x6B	; 107
     3fc:	36 06       	cpc	r3, r22
     3fe:	0f 00       	.word	0x000f	; ????
     400:	00 00       	nop
     402:	3e 03       	fmul	r19, r22
     404:	1e 30       	cpi	r17, 0x0E	; 14
     406:	1f 00       	.word	0x001f	; ????
     408:	08 0c       	add	r0, r8
     40a:	3e 0c       	add	r3, r14
     40c:	0c 2c       	mov	r0, r12
     40e:	18 00       	.word	0x0018	; ????
     410:	00 00       	nop
     412:	33 33       	cpi	r19, 0x33	; 51
     414:	33 33       	cpi	r19, 0x33	; 51
     416:	6e 00       	.word	0x006e	; ????
     418:	00 00       	nop
     41a:	33 33       	cpi	r19, 0x33	; 51
     41c:	33 1e       	adc	r3, r19
     41e:	0c 00       	.word	0x000c	; ????
     420:	00 00       	nop
     422:	63 63       	ori	r22, 0x33	; 51
     424:	6b 7f       	andi	r22, 0xFB	; 251
     426:	36 00       	.word	0x0036	; ????
     428:	00 00       	nop
     42a:	63 36       	cpi	r22, 0x63	; 99
     42c:	1c 36       	cpi	r17, 0x6C	; 108
     42e:	63 00       	.word	0x0063	; ????
     430:	00 00       	nop
     432:	33 33       	cpi	r19, 0x33	; 51
     434:	33 3e       	cpi	r19, 0xE3	; 227
     436:	30 1f       	adc	r19, r16
     438:	00 00       	nop
     43a:	3f 19       	sub	r19, r15
     43c:	0c 26       	eor	r0, r28
     43e:	3f 00       	.word	0x003f	; ????
     440:	38 0c       	add	r3, r8
     442:	0c 07       	cpc	r16, r28
     444:	0c 0c       	add	r0, r12
     446:	38 00       	.word	0x0038	; ????
     448:	18 18       	sub	r1, r8
     44a:	18 00       	.word	0x0018	; ????
     44c:	18 18       	sub	r1, r8
     44e:	18 00       	.word	0x0018	; ????
     450:	07 0c       	add	r0, r7
     452:	0c 38       	cpi	r16, 0x8C	; 140
     454:	0c 0c       	add	r0, r12
     456:	07 00       	.word	0x0007	; ????
     458:	6e 3b       	cpi	r22, 0xBE	; 190
     45a:	00 00       	nop
     45c:	00 00       	nop
     45e:	00 00       	nop
     460:	08 1c       	adc	r0, r8
     462:	36 63       	ori	r19, 0x36	; 54
     464:	63 63       	ori	r22, 0x33	; 51
     466:	7f 00       	.word	0x007f	; ????
     468:	1e 33       	cpi	r17, 0x3E	; 62
     46a:	03 03       	mulsu	r16, r19
     46c:	33 1e       	adc	r3, r19
     46e:	0c 06       	cpc	r0, r28
     470:	00 33       	cpi	r16, 0x30	; 48
     472:	00 33       	cpi	r16, 0x30	; 48
     474:	33 33       	cpi	r19, 0x33	; 51
     476:	7e 00       	.word	0x007e	; ????
     478:	18 0c       	add	r1, r8
     47a:	1e 33       	cpi	r17, 0x3E	; 62
     47c:	3f 03       	fmul	r19, r23
     47e:	1e 00       	.word	0x001e	; ????
     480:	7e c3       	rjmp	.+1788   	; 0xb7e <_ZN7LedCube14setVoxelsYFastEhhh+0x8>
     482:	3c 60       	ori	r19, 0x0C	; 12
     484:	7c 66       	ori	r23, 0x6C	; 108
     486:	fc 00       	.word	0x00fc	; ????
     488:	33 00       	.word	0x0033	; ????
     48a:	1e 30       	cpi	r17, 0x0E	; 14
     48c:	3e 33       	cpi	r19, 0x3E	; 62
     48e:	7e 00       	.word	0x007e	; ????
     490:	06 0c       	add	r0, r6
     492:	1e 30       	cpi	r17, 0x0E	; 14
     494:	3e 33       	cpi	r19, 0x3E	; 62
     496:	7e 00       	.word	0x007e	; ????
     498:	3c 66       	ori	r19, 0x6C	; 108
     49a:	3c 60       	ori	r19, 0x0C	; 12
     49c:	7c 66       	ori	r23, 0x6C	; 108
     49e:	fc 00       	.word	0x00fc	; ????
     4a0:	00 1e       	adc	r0, r16
     4a2:	33 03       	mulsu	r19, r19
     4a4:	33 1e       	adc	r3, r19
     4a6:	0c 06       	cpc	r0, r28
     4a8:	7e c3       	rjmp	.+1788   	; 0xba6 <_ZN7LedCube14setVoxelsYFastEhhh+0x30>
     4aa:	3c 66       	ori	r19, 0x6C	; 108
     4ac:	7e 06       	cpc	r7, r30
     4ae:	3c 00       	.word	0x003c	; ????
     4b0:	33 00       	.word	0x0033	; ????
     4b2:	1e 33       	cpi	r17, 0x3E	; 62
     4b4:	3f 03       	fmul	r19, r23
     4b6:	1e 00       	.word	0x001e	; ????
     4b8:	06 0c       	add	r0, r6
     4ba:	1e 33       	cpi	r17, 0x3E	; 62
     4bc:	3f 03       	fmul	r19, r23
     4be:	1e 00       	.word	0x001e	; ????
     4c0:	33 00       	.word	0x0033	; ????
     4c2:	0e 0c       	add	r0, r14
     4c4:	0c 0c       	add	r0, r12
     4c6:	1e 00       	.word	0x001e	; ????
     4c8:	3e 63       	ori	r19, 0x3E	; 62
     4ca:	1c 18       	sub	r1, r12
     4cc:	18 18       	sub	r1, r8
     4ce:	3c 00       	.word	0x003c	; ????
     4d0:	06 0c       	add	r0, r6
     4d2:	0e 0c       	add	r0, r14
     4d4:	0c 0c       	add	r0, r12
     4d6:	1e 00       	.word	0x001e	; ????
     4d8:	33 0c       	add	r3, r3
     4da:	1e 33       	cpi	r17, 0x3E	; 62
     4dc:	33 3f       	cpi	r19, 0xF3	; 243
     4de:	33 00       	.word	0x0033	; ????
     4e0:	0c 12       	cpse	r0, r28
     4e2:	0c 1e       	adc	r0, r28
     4e4:	33 3f       	cpi	r19, 0xF3	; 243
     4e6:	33 00       	.word	0x0033	; ????
     4e8:	18 0c       	add	r1, r8
     4ea:	3f 06       	cpc	r3, r31
     4ec:	1e 06       	cpc	r1, r30
     4ee:	3f 00       	.word	0x003f	; ????
     4f0:	00 00       	nop
     4f2:	fe 30       	cpi	r31, 0x0E	; 14
     4f4:	fe 33       	cpi	r31, 0x3E	; 62
     4f6:	fe 00       	.word	0x00fe	; ????
     4f8:	7c 36       	cpi	r23, 0x6C	; 108
     4fa:	33 7f       	andi	r19, 0xF3	; 243
     4fc:	33 33       	cpi	r19, 0x33	; 51
     4fe:	73 00       	.word	0x0073	; ????
     500:	1e 33       	cpi	r17, 0x3E	; 62
     502:	00 1e       	adc	r0, r16
     504:	33 33       	cpi	r19, 0x33	; 51
     506:	1e 00       	.word	0x001e	; ????
     508:	00 33       	cpi	r16, 0x30	; 48
     50a:	00 1e       	adc	r0, r16
     50c:	33 33       	cpi	r19, 0x33	; 51
     50e:	1e 00       	.word	0x001e	; ????
     510:	06 0c       	add	r0, r6
     512:	00 1e       	adc	r0, r16
     514:	33 33       	cpi	r19, 0x33	; 51
     516:	1e 00       	.word	0x001e	; ????
     518:	1e 33       	cpi	r17, 0x3E	; 62
     51a:	00 33       	cpi	r16, 0x30	; 48
     51c:	33 33       	cpi	r19, 0x33	; 51
     51e:	7e 00       	.word	0x007e	; ????
     520:	06 0c       	add	r0, r6
     522:	00 33       	cpi	r16, 0x30	; 48
     524:	33 33       	cpi	r19, 0x33	; 51
     526:	7e 00       	.word	0x007e	; ????
     528:	00 33       	cpi	r16, 0x30	; 48
     52a:	00 33       	cpi	r16, 0x30	; 48
     52c:	33 3f       	cpi	r19, 0xF3	; 243
     52e:	30 1f       	adc	r19, r16
     530:	63 00       	.word	0x0063	; ????
     532:	3e 63       	ori	r19, 0x3E	; 62
     534:	63 63       	ori	r22, 0x33	; 51
     536:	3e 00       	.word	0x003e	; ????
     538:	33 00       	.word	0x0033	; ????
     53a:	33 33       	cpi	r19, 0x33	; 51
     53c:	33 33       	cpi	r19, 0x33	; 51
     53e:	1e 00       	.word	0x001e	; ????
     540:	00 00       	nop
     542:	3e 73       	andi	r19, 0x3E	; 62
     544:	6b 67       	ori	r22, 0x7B	; 123
     546:	3e 00       	.word	0x003e	; ????
     548:	1c 36       	cpi	r17, 0x6C	; 108
     54a:	26 0f       	add	r18, r22
     54c:	06 67       	ori	r16, 0x76	; 118
     54e:	3f 00       	.word	0x003f	; ????
     550:	5c 36       	cpi	r21, 0x6C	; 108
     552:	73 6b       	ori	r23, 0xB3	; 179
     554:	67 36       	cpi	r22, 0x67	; 103
     556:	1d 00       	.word	0x001d	; ????
     558:	00 00       	nop
     55a:	33 1e       	adc	r3, r19
     55c:	0c 1e       	adc	r0, r28
     55e:	33 00       	.word	0x0033	; ????
     560:	70 d8       	rcall	.-3872   	; 0xfffff642 <__eeprom_end+0xff7ef642>
     562:	18 7e       	andi	r17, 0xE8	; 232
     564:	18 18       	sub	r1, r8
     566:	1b 0e       	add	r1, r27
     568:	18 0c       	add	r1, r8
     56a:	1e 30       	cpi	r17, 0x0E	; 14
     56c:	3e 33       	cpi	r19, 0x3E	; 62
     56e:	7e 00       	.word	0x007e	; ????
     570:	18 0c       	add	r1, r8
     572:	0e 0c       	add	r0, r14
     574:	0c 0c       	add	r0, r12
     576:	1e 00       	.word	0x001e	; ????
     578:	30 18       	sub	r3, r0
     57a:	00 1e       	adc	r0, r16
     57c:	33 33       	cpi	r19, 0x33	; 51
     57e:	1e 00       	.word	0x001e	; ????
     580:	30 18       	sub	r3, r0
     582:	00 33       	cpi	r16, 0x30	; 48
     584:	33 33       	cpi	r19, 0x33	; 51
     586:	7e 00       	.word	0x007e	; ????
     588:	6e 3b       	cpi	r22, 0xBE	; 190
     58a:	00 1f       	adc	r16, r16
     58c:	33 33       	cpi	r19, 0x33	; 51
     58e:	33 00       	.word	0x0033	; ????
     590:	6e 3b       	cpi	r22, 0xBE	; 190
     592:	00 37       	cpi	r16, 0x70	; 112
     594:	3f 3b       	cpi	r19, 0xBF	; 191
     596:	33 00       	.word	0x0033	; ????
     598:	3c 36       	cpi	r19, 0x6C	; 108
     59a:	36 7c       	andi	r19, 0xC6	; 198
     59c:	00 7e       	andi	r16, 0xE0	; 224
     59e:	00 00       	nop
     5a0:	3c 66       	ori	r19, 0x6C	; 108
     5a2:	66 3c       	cpi	r22, 0xC6	; 198
     5a4:	00 7e       	andi	r16, 0xE0	; 224
     5a6:	00 00       	nop
     5a8:	0c 00       	.word	0x000c	; ????
     5aa:	0c 06       	cpc	r0, r28
     5ac:	03 33       	cpi	r16, 0x33	; 51
     5ae:	1e 00       	.word	0x001e	; ????
     5b0:	3c 5a       	subi	r19, 0xAC	; 172
     5b2:	a5 9d       	mul	r26, r5
     5b4:	95 66       	ori	r25, 0x65	; 101
     5b6:	3c 00       	.word	0x003c	; ????
     5b8:	00 00       	nop
     5ba:	00 3f       	cpi	r16, 0xF0	; 240
     5bc:	30 30       	cpi	r19, 0x00	; 0
     5be:	00 00       	nop
     5c0:	67 36       	cpi	r22, 0x67	; 103
     5c2:	1e 7e       	andi	r17, 0xEE	; 238
     5c4:	c6 73       	andi	r28, 0x36	; 54
     5c6:	19 f8       	.word	0xf819	; ????
     5c8:	67 36       	cpi	r22, 0x67	; 103
     5ca:	1e ce       	rjmp	.-964    	; 0x208 <__trampolines_end+0x1a0>
     5cc:	e6 b3       	in	r30, 0x16	; 22
     5ce:	f9 c0       	rjmp	.+498    	; 0x7c2 <__FUSE_REGION_LENGTH__+0x3c2>
     5d0:	00 18       	sub	r0, r0
     5d2:	00 18       	sub	r0, r0
     5d4:	18 3c       	cpi	r17, 0xC8	; 200
     5d6:	3c 18       	sub	r3, r12
     5d8:	00 cc       	rjmp	.-2048   	; 0xfffffdda <__eeprom_end+0xff7efdda>
     5da:	66 33       	cpi	r22, 0x36	; 54
     5dc:	66 cc       	rjmp	.-1844   	; 0xfffffeaa <__eeprom_end+0xff7efeaa>
     5de:	00 00       	nop
     5e0:	00 33       	cpi	r16, 0x30	; 48
     5e2:	66 cc       	rjmp	.-1844   	; 0xfffffeb0 <__eeprom_end+0xff7efeb0>
     5e4:	66 33       	cpi	r22, 0x36	; 54
     5e6:	00 00       	nop
     5e8:	44 11       	cpse	r20, r4
     5ea:	44 11       	cpse	r20, r4
     5ec:	44 11       	cpse	r20, r4
     5ee:	44 11       	cpse	r20, r4
     5f0:	aa 55       	subi	r26, 0x5A	; 90
     5f2:	aa 55       	subi	r26, 0x5A	; 90
     5f4:	aa 55       	subi	r26, 0x5A	; 90
     5f6:	aa 55       	subi	r26, 0x5A	; 90
     5f8:	bb ee       	ldi	r27, 0xEB	; 235
     5fa:	bb ee       	ldi	r27, 0xEB	; 235
     5fc:	bb ee       	ldi	r27, 0xEB	; 235
     5fe:	bb ee       	ldi	r27, 0xEB	; 235
     600:	18 18       	sub	r1, r8
     602:	18 18       	sub	r1, r8
     604:	18 18       	sub	r1, r8
     606:	18 18       	sub	r1, r8
     608:	18 18       	sub	r1, r8
     60a:	18 18       	sub	r1, r8
     60c:	1f 18       	sub	r1, r15
     60e:	18 18       	sub	r1, r8
     610:	30 18       	sub	r3, r0
     612:	0c 1e       	adc	r0, r28
     614:	33 3f       	cpi	r19, 0xF3	; 243
     616:	33 00       	.word	0x0033	; ????
     618:	1e 21       	and	r17, r14
     61a:	0c 1e       	adc	r0, r28
     61c:	33 3f       	cpi	r19, 0xF3	; 243
     61e:	33 00       	.word	0x0033	; ????
     620:	03 06       	cpc	r0, r19
     622:	0c 1e       	adc	r0, r28
     624:	33 3f       	cpi	r19, 0xF3	; 243
     626:	33 00       	.word	0x0033	; ????
     628:	3c 42       	sbci	r19, 0x2C	; 44
     62a:	9d 85       	ldd	r25, Y+13	; 0x0d
     62c:	9d 42       	sbci	r25, 0x2D	; 45
     62e:	3c 00       	.word	0x003c	; ????
     630:	6c 6c       	ori	r22, 0xCC	; 204
     632:	6f 60       	ori	r22, 0x0F	; 15
     634:	6f 6c       	ori	r22, 0xCF	; 207
     636:	6c 6c       	ori	r22, 0xCC	; 204
     638:	6c 6c       	ori	r22, 0xCC	; 204
     63a:	6c 6c       	ori	r22, 0xCC	; 204
     63c:	6c 6c       	ori	r22, 0xCC	; 204
     63e:	6c 6c       	ori	r22, 0xCC	; 204
     640:	00 00       	nop
     642:	7f 60       	ori	r23, 0x0F	; 15
     644:	6f 6c       	ori	r22, 0xCF	; 207
     646:	6c 6c       	ori	r22, 0xCC	; 204
     648:	6c 6c       	ori	r22, 0xCC	; 204
     64a:	6f 60       	ori	r22, 0x0F	; 15
     64c:	7f 00       	.word	0x007f	; ????
     64e:	00 00       	nop
     650:	18 18       	sub	r1, r8
     652:	7e 03       	fmul	r23, r22
     654:	03 7e       	andi	r16, 0xE3	; 227
     656:	18 18       	sub	r1, r8
     658:	33 33       	cpi	r19, 0x33	; 51
     65a:	1e 3f       	cpi	r17, 0xFE	; 254
     65c:	0c 3f       	cpi	r16, 0xFC	; 252
     65e:	0c 0c       	add	r0, r12
     660:	00 00       	nop
     662:	00 00       	nop
     664:	1f 18       	sub	r1, r15
     666:	18 18       	sub	r1, r8
     668:	18 18       	sub	r1, r8
     66a:	18 18       	sub	r1, r8
     66c:	f8 00       	.word	0x00f8	; ????
     66e:	00 00       	nop
     670:	18 18       	sub	r1, r8
     672:	18 18       	sub	r1, r8
     674:	ff 00       	.word	0x00ff	; ????
     676:	00 00       	nop
     678:	00 00       	nop
     67a:	00 00       	nop
     67c:	ff 18       	sub	r15, r15
     67e:	18 18       	sub	r1, r8
     680:	18 18       	sub	r1, r8
     682:	18 18       	sub	r1, r8
     684:	f8 18       	sub	r15, r8
     686:	18 18       	sub	r1, r8
     688:	00 00       	nop
     68a:	00 00       	nop
     68c:	ff 00       	.word	0x00ff	; ????
     68e:	00 00       	nop
     690:	18 18       	sub	r1, r8
     692:	18 18       	sub	r1, r8
     694:	ff 18       	sub	r15, r15
     696:	18 18       	sub	r1, r8
     698:	6e 3b       	cpi	r22, 0xBE	; 190
     69a:	1e 30       	cpi	r17, 0x0E	; 14
     69c:	3e 33       	cpi	r19, 0x3E	; 62
     69e:	7e 00       	.word	0x007e	; ????
     6a0:	6e 3b       	cpi	r22, 0xBE	; 190
     6a2:	0c 1e       	adc	r0, r28
     6a4:	33 3f       	cpi	r19, 0xF3	; 243
     6a6:	33 00       	.word	0x0033	; ????
     6a8:	6c 6c       	ori	r22, 0xCC	; 204
     6aa:	ec 0c       	add	r14, r12
     6ac:	fc 00       	.word	0x00fc	; ????
     6ae:	00 00       	nop
     6b0:	00 00       	nop
     6b2:	fc 0c       	add	r15, r12
     6b4:	ec 6c       	ori	r30, 0xCC	; 204
     6b6:	6c 6c       	ori	r22, 0xCC	; 204
     6b8:	6c 6c       	ori	r22, 0xCC	; 204
     6ba:	ef 00       	.word	0x00ef	; ????
     6bc:	ff 00       	.word	0x00ff	; ????
     6be:	00 00       	nop
     6c0:	00 00       	nop
     6c2:	ff 00       	.word	0x00ff	; ????
     6c4:	ef 6c       	ori	r30, 0xCF	; 207
     6c6:	6c 6c       	ori	r22, 0xCC	; 204
     6c8:	6c 6c       	ori	r22, 0xCC	; 204
     6ca:	ec 0c       	add	r14, r12
     6cc:	ec 6c       	ori	r30, 0xCC	; 204
     6ce:	6c 6c       	ori	r22, 0xCC	; 204
     6d0:	00 00       	nop
     6d2:	ff 00       	.word	0x00ff	; ????
     6d4:	ff 00       	.word	0x00ff	; ????
     6d6:	00 00       	nop
     6d8:	6c 6c       	ori	r22, 0xCC	; 204
     6da:	ef 00       	.word	0x00ef	; ????
     6dc:	ef 6c       	ori	r30, 0xCF	; 207
     6de:	6c 6c       	ori	r22, 0xCC	; 204
     6e0:	00 41       	sbci	r16, 0x10	; 16
     6e2:	7f 36       	cpi	r23, 0x6F	; 111
     6e4:	36 7f       	andi	r19, 0xF6	; 246
     6e6:	41 00       	.word	0x0041	; ????
     6e8:	1b 0e       	add	r1, r27
     6ea:	1b 30       	cpi	r17, 0x0B	; 11
     6ec:	3c 36       	cpi	r19, 0x6C	; 108
     6ee:	1c 00       	.word	0x001c	; ????
     6f0:	3f 36       	cpi	r19, 0x6F	; 111
     6f2:	66 6f       	ori	r22, 0xF6	; 246
     6f4:	66 36       	cpi	r22, 0x66	; 102
     6f6:	3f 00       	.word	0x003f	; ????
     6f8:	1e 21       	and	r17, r14
     6fa:	3f 06       	cpc	r3, r31
     6fc:	1e 06       	cpc	r1, r30
     6fe:	3f 00       	.word	0x003f	; ????
     700:	33 00       	.word	0x0033	; ????
     702:	3f 06       	cpc	r3, r31
     704:	1e 06       	cpc	r1, r30
     706:	3f 00       	.word	0x003f	; ????
     708:	06 0c       	add	r0, r6
     70a:	3f 06       	cpc	r3, r31
     70c:	1e 06       	cpc	r1, r30
     70e:	3f 00       	.word	0x003f	; ????
     710:	00 03       	mulsu	r16, r16
     712:	02 07       	cpc	r16, r18
     714:	00 00       	nop
     716:	00 00       	nop
     718:	18 0c       	add	r1, r8
     71a:	1e 0c       	add	r1, r14
     71c:	0c 0c       	add	r0, r12
     71e:	1e 00       	.word	0x001e	; ????
     720:	1e 21       	and	r17, r14
     722:	1e 0c       	add	r1, r14
     724:	0c 0c       	add	r0, r12
     726:	1e 00       	.word	0x001e	; ????
     728:	33 00       	.word	0x0033	; ????
     72a:	1e 0c       	add	r1, r14
     72c:	0c 0c       	add	r0, r12
     72e:	1e 00       	.word	0x001e	; ????
     730:	18 18       	sub	r1, r8
     732:	18 18       	sub	r1, r8
     734:	1f 00       	.word	0x001f	; ????
     736:	00 00       	nop
     738:	00 00       	nop
     73a:	00 00       	nop
     73c:	f8 18       	sub	r15, r8
     73e:	18 18       	sub	r1, r8
     740:	ff ff       	.word	0xffff	; ????
     742:	ff ff       	.word	0xffff	; ????
     744:	ff ff       	.word	0xffff	; ????
     746:	ff ff       	.word	0xffff	; ????
     748:	00 00       	nop
     74a:	00 00       	nop
     74c:	ff ff       	.word	0xffff	; ????
     74e:	ff ff       	.word	0xffff	; ????
     750:	18 18       	sub	r1, r8
     752:	18 00       	.word	0x0018	; ????
     754:	18 18       	sub	r1, r8
     756:	18 00       	.word	0x0018	; ????
     758:	06 0c       	add	r0, r6
     75a:	1e 0c       	add	r1, r14
     75c:	0c 0c       	add	r0, r12
     75e:	1e 00       	.word	0x001e	; ????
     760:	ff ff       	.word	0xffff	; ????
     762:	ff ff       	.word	0xffff	; ????
     764:	00 00       	nop
     766:	00 00       	nop
     768:	18 0c       	add	r1, r8
     76a:	3e 63       	ori	r19, 0x3E	; 62
     76c:	63 63       	ori	r22, 0x33	; 51
     76e:	3e 00       	.word	0x003e	; ????
     770:	00 1e       	adc	r0, r16
     772:	33 1f       	adc	r19, r19
     774:	33 1f       	adc	r19, r19
     776:	03 03       	mulsu	r16, r19
     778:	3e 41       	sbci	r19, 0x1E	; 30
     77a:	3e 63       	ori	r19, 0x3E	; 62
     77c:	63 63       	ori	r22, 0x33	; 51
     77e:	3e 00       	.word	0x003e	; ????
     780:	0c 18       	sub	r0, r12
     782:	3e 63       	ori	r19, 0x3E	; 62
     784:	63 63       	ori	r22, 0x33	; 51
     786:	3e 00       	.word	0x003e	; ????
     788:	6e 3b       	cpi	r22, 0xBE	; 190
     78a:	00 1e       	adc	r0, r16
     78c:	33 33       	cpi	r19, 0x33	; 51
     78e:	1e 00       	.word	0x001e	; ????
     790:	6e 3b       	cpi	r22, 0xBE	; 190
     792:	3e 63       	ori	r19, 0x3E	; 62
     794:	63 63       	ori	r22, 0x33	; 51
     796:	3e 00       	.word	0x003e	; ????
     798:	00 66       	ori	r16, 0x60	; 96
     79a:	66 66       	ori	r22, 0x66	; 102
     79c:	66 3e       	cpi	r22, 0xE6	; 230
     79e:	06 03       	mulsu	r16, r22
     7a0:	00 07       	cpc	r16, r16
     7a2:	1e 36       	cpi	r17, 0x6E	; 110
     7a4:	1e 06       	cpc	r1, r30
     7a6:	0f 00       	.word	0x000f	; ????
     7a8:	0f 06       	cpc	r0, r31
     7aa:	3e 66       	ori	r19, 0x6E	; 110
     7ac:	3e 06       	cpc	r3, r30
     7ae:	0f 00       	.word	0x000f	; ????
     7b0:	18 0c       	add	r1, r8
     7b2:	33 33       	cpi	r19, 0x33	; 51
     7b4:	33 33       	cpi	r19, 0x33	; 51
     7b6:	1e 00       	.word	0x001e	; ????
     7b8:	1e 21       	and	r17, r14
     7ba:	00 33       	cpi	r16, 0x30	; 48
     7bc:	33 33       	cpi	r19, 0x33	; 51
     7be:	1e 00       	.word	0x001e	; ????
     7c0:	06 0c       	add	r0, r6
     7c2:	33 33       	cpi	r19, 0x33	; 51
     7c4:	33 33       	cpi	r19, 0x33	; 51
     7c6:	1e 00       	.word	0x001e	; ????
     7c8:	18 0c       	add	r1, r8
     7ca:	00 33       	cpi	r16, 0x30	; 48
     7cc:	33 3f       	cpi	r19, 0xF3	; 243
     7ce:	30 1f       	adc	r19, r16
     7d0:	18 0c       	add	r1, r8
     7d2:	33 33       	cpi	r19, 0x33	; 51
     7d4:	1e 0c       	add	r1, r14
     7d6:	1e 00       	.word	0x001e	; ????
     7d8:	00 3f       	cpi	r16, 0xF0	; 240
     7da:	00 00       	nop
     7dc:	00 00       	nop
     7de:	00 00       	nop
     7e0:	18 0c       	add	r1, r8
	...
     7ea:	00 00       	nop
     7ec:	3f 00       	.word	0x003f	; ????
     7ee:	00 00       	nop
     7f0:	0c 0c       	add	r0, r12
     7f2:	3f 0c       	add	r3, r15
     7f4:	0c 00       	.word	0x000c	; ????
     7f6:	3f 00       	.word	0x003f	; ????
     7f8:	00 00       	nop
     7fa:	00 3f       	cpi	r16, 0xF0	; 240
     7fc:	00 3f       	cpi	r16, 0xF0	; 240
     7fe:	00 00       	nop
     800:	67 34       	cpi	r22, 0x47	; 71
     802:	1e cc       	rjmp	.-1988   	; 0x40 <__SREG__+0x1>
     804:	e7 b3       	in	r30, 0x17	; 23
     806:	f9 c0       	rjmp	.+498    	; 0x9fa <setup+0x4>
     808:	fe db       	rcall	.-2052   	; 0x6 <__zero_reg__+0x5>
     80a:	db de       	rcall	.-586    	; 0x5c2 <__FUSE_REGION_LENGTH__+0x1c2>
     80c:	d8 d8       	rcall	.-3664   	; 0xfffff9be <__eeprom_end+0xff7ef9be>
     80e:	d8 00       	.word	0x00d8	; ????
     810:	7e c3       	rjmp	.+1788   	; 0xf0e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x180>
     812:	1e 33       	cpi	r17, 0x3E	; 62
     814:	33 1e       	adc	r3, r19
     816:	31 1f       	adc	r19, r17
     818:	0c 0c       	add	r0, r12
     81a:	00 3f       	cpi	r16, 0xF0	; 240
     81c:	00 0c       	add	r0, r0
     81e:	0c 00       	.word	0x000c	; ????
     820:	00 00       	nop
     822:	00 00       	nop
     824:	00 00       	nop
     826:	0c 06       	cpc	r0, r28
     828:	1c 36       	cpi	r17, 0x6C	; 108
     82a:	36 1c       	adc	r3, r6
     82c:	00 00       	nop
     82e:	00 00       	nop
     830:	00 33       	cpi	r16, 0x30	; 48
	...
     83a:	00 00       	nop
     83c:	18 00       	.word	0x0018	; ????
     83e:	00 00       	nop
     840:	1c 1e       	adc	r1, r28
     842:	18 18       	sub	r1, r8
     844:	7e 00       	.word	0x007e	; ????
     846:	00 00       	nop
     848:	3e 70       	andi	r19, 0x0E	; 14
     84a:	3c 70       	andi	r19, 0x0C	; 12
     84c:	3e 00       	.word	0x003e	; ????
     84e:	00 00       	nop
     850:	1e 30       	cpi	r17, 0x0E	; 14
     852:	1c 06       	cpc	r1, r28
     854:	3e 00       	.word	0x003e	; ????
     856:	00 00       	nop
     858:	00 00       	nop
     85a:	3c 3c       	cpi	r19, 0xCC	; 204
     85c:	3c 3c       	cpi	r19, 0xCC	; 204
	...

00000868 <digital_pin_to_timer_PGM>:
     868:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
     878:	00 00 00 00                                         ....

0000087c <digital_pin_to_bit_mask_PGM>:
     87c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
     88c:	04 08 10 20                                         ... 

00000890 <digital_pin_to_port_PGM>:
     890:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
     8a0:	03 03 03 03                                         ....

000008a4 <port_to_output_PGM>:
     8a4:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000008ae <port_to_mode_PGM>:
     8ae:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000008b8 <__ctors_start>:
     8b8:	27 05       	cpc	r18, r7
     8ba:	eb 08       	sbc	r14, r11

000008bc <__ctors_end>:
     8bc:	31 05       	cpc	r19, r1

000008be <__dtors_end>:
     8be:	11 24       	eor	r1, r1
     8c0:	1f be       	out	0x3f, r1	; 63
     8c2:	cf ef       	ldi	r28, 0xFF	; 255
     8c4:	d8 e0       	ldi	r29, 0x08	; 8
     8c6:	de bf       	out	0x3e, r29	; 62
     8c8:	cd bf       	out	0x3d, r28	; 61

000008ca <__do_copy_data>:
     8ca:	11 e0       	ldi	r17, 0x01	; 1
     8cc:	a0 e0       	ldi	r26, 0x00	; 0
     8ce:	b1 e0       	ldi	r27, 0x01	; 1
     8d0:	e8 ea       	ldi	r30, 0xA8	; 168
     8d2:	f7 e1       	ldi	r31, 0x17	; 23
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <__do_copy_data+0x10>
     8d6:	05 90       	lpm	r0, Z+
     8d8:	0d 92       	st	X+, r0
     8da:	ae 32       	cpi	r26, 0x2E	; 46
     8dc:	b1 07       	cpc	r27, r17
     8de:	d9 f7       	brne	.-10     	; 0x8d6 <__do_copy_data+0xc>

000008e0 <__do_clear_bss>:
     8e0:	22 e0       	ldi	r18, 0x02	; 2
     8e2:	ae e2       	ldi	r26, 0x2E	; 46
     8e4:	b1 e0       	ldi	r27, 0x01	; 1
     8e6:	01 c0       	rjmp	.+2      	; 0x8ea <.do_clear_bss_start>

000008e8 <.do_clear_bss_loop>:
     8e8:	1d 92       	st	X+, r1

000008ea <.do_clear_bss_start>:
     8ea:	a1 36       	cpi	r26, 0x61	; 97
     8ec:	b2 07       	cpc	r27, r18
     8ee:	e1 f7       	brne	.-8      	; 0x8e8 <.do_clear_bss_loop>

000008f0 <__do_global_ctors>:
     8f0:	14 e0       	ldi	r17, 0x04	; 4
     8f2:	ce e5       	ldi	r28, 0x5E	; 94
     8f4:	d4 e0       	ldi	r29, 0x04	; 4
     8f6:	04 c0       	rjmp	.+8      	; 0x900 <__stack+0x1>
     8f8:	21 97       	sbiw	r28, 0x01	; 1
     8fa:	fe 01       	movw	r30, r28
     8fc:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__tablejump2__>
     900:	cc 35       	cpi	r28, 0x5C	; 92
     902:	d1 07       	cpc	r29, r17
     904:	c9 f7       	brne	.-14     	; 0x8f8 <__do_global_ctors+0x8>
     906:	0e 94 19 09 	call	0x1232	; 0x1232 <main>
     90a:	0c 94 c7 0b 	jmp	0x178e	; 0x178e <__do_global_dtors>

0000090e <__bad_interrupt>:
     90e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000912 <loop>:
	setChar(3);
}

void loop()
{
	if(Counter == 200) {
     912:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <Counter>
     916:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <Counter+0x1>
     91a:	88 3c       	cpi	r24, 0xC8	; 200
     91c:	91 05       	cpc	r25, r1
     91e:	69 f5       	brne	.+90     	; 0x97a <loop+0x68>
		//CubeTrans.shiftBackward(&Cube, true);
		//setChar(CharCounter);
		Cube.setNextFrameReady();
     920:	83 e3       	ldi	r24, 0x33	; 51
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZN7LedCube17setNextFrameReadyEv>
		Cube.setNextFrameTimeElapsed();
     928:	83 e3       	ldi	r24, 0x33	; 51
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	0e 94 06 06 	call	0xc0c	; 0xc0c <_ZN7LedCube23setNextFrameTimeElapsedEv>
		CubeTrans.shiftCircle(LEDCUBE_AXIS_Z, TRANSFORMATION_ROTATION_COUNTERCLOCKWISE, 1);
     930:	21 e0       	ldi	r18, 0x01	; 1
     932:	41 e0       	ldi	r20, 0x01	; 1
     934:	62 e0       	ldi	r22, 0x02	; 2
     936:	81 e3       	ldi	r24, 0x31	; 49
     938:	91 e0       	ldi	r25, 0x01	; 1
     93a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh>
		CubeTrans.shiftCircle(LEDCUBE_AXIS_Z, TRANSFORMATION_ROTATION_COUNTERCLOCKWISE, 2);
     93e:	22 e0       	ldi	r18, 0x02	; 2
     940:	41 e0       	ldi	r20, 0x01	; 1
     942:	62 e0       	ldi	r22, 0x02	; 2
     944:	81 e3       	ldi	r24, 0x31	; 49
     946:	91 e0       	ldi	r25, 0x01	; 1
     948:	0e 94 c7 06 	call	0xd8e	; 0xd8e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh>
		CubeTrans.shiftCircle(LEDCUBE_AXIS_Z, TRANSFORMATION_ROTATION_COUNTERCLOCKWISE, 3);
     94c:	23 e0       	ldi	r18, 0x03	; 3
     94e:	41 e0       	ldi	r20, 0x01	; 1
     950:	62 e0       	ldi	r22, 0x02	; 2
     952:	81 e3       	ldi	r24, 0x31	; 49
     954:	91 e0       	ldi	r25, 0x01	; 1
     956:	0e 94 c7 06 	call	0xd8e	; 0xd8e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh>
		CubeTrans.shiftCircle(LEDCUBE_AXIS_Z, TRANSFORMATION_ROTATION_COUNTERCLOCKWISE, 4);
     95a:	24 e0       	ldi	r18, 0x04	; 4
     95c:	41 e0       	ldi	r20, 0x01	; 1
     95e:	62 e0       	ldi	r22, 0x02	; 2
     960:	81 e3       	ldi	r24, 0x31	; 49
     962:	91 e0       	ldi	r25, 0x01	; 1
     964:	0e 94 c7 06 	call	0xd8e	; 0xd8e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh>
		Counter = 0;
     968:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <Counter+0x1>
     96c:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <Counter>
		CharCounter++;
     970:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
     974:	8f 5f       	subi	r24, 0xFF	; 255
     976:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
	}
	Counter++;
     97a:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <Counter>
     97e:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <Counter+0x1>
     982:	01 96       	adiw	r24, 0x01	; 1
     984:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <Counter+0x1>
     988:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <Counter>
	delay(1);
     98c:	61 e0       	ldi	r22, 0x01	; 1
     98e:	70 e0       	ldi	r23, 0x00	; 0
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 01 0a 	call	0x1402	; 0x1402 <delay>
	digitalWrite(7, STD_ON);
     998:	61 e0       	ldi	r22, 0x01	; 1
     99a:	87 e0       	ldi	r24, 0x07	; 7
     99c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <digitalWrite>
	Cube.task();
     9a0:	83 e3       	ldi	r24, 0x33	; 51
     9a2:	91 e0       	ldi	r25, 0x01	; 1
     9a4:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <_ZN7LedCube4taskEv>
	digitalWrite(7, STD_OFF);
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	87 e0       	ldi	r24, 0x07	; 7
     9ac:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <digitalWrite>

000009b0 <_Z7setCharh>:
}

void setChar(byte Number) {
     9b0:	ef 92       	push	r14
     9b2:	ff 92       	push	r15
     9b4:	1f 93       	push	r17
     9b6:	cf 93       	push	r28
     9b8:	df 93       	push	r29
     9ba:	98 e0       	ldi	r25, 0x08	; 8
     9bc:	89 9f       	mul	r24, r25
     9be:	70 01       	movw	r14, r0
     9c0:	11 24       	eor	r1, r1
     9c2:	c0 e0       	ldi	r28, 0x00	; 0
     9c4:	d0 e0       	ldi	r29, 0x00	; 0
     9c6:	17 e0       	ldi	r17, 0x07	; 7
     9c8:	fe 01       	movw	r30, r28
     9ca:	ee 0d       	add	r30, r14
     9cc:	ff 1d       	adc	r31, r15
     9ce:	e8 59       	subi	r30, 0x98	; 152
     9d0:	ff 4f       	sbci	r31, 0xFF	; 255
	for(byte i = 0; i < 8; i++) {
		Cube.setVoxelsYFast(0, 7-i, pgm_read_byte_near(&font[Number][i]));
     9d2:	24 91       	lpm	r18, Z
     9d4:	41 2f       	mov	r20, r17
     9d6:	4c 1b       	sub	r20, r28
     9d8:	60 e0       	ldi	r22, 0x00	; 0
     9da:	83 e3       	ldi	r24, 0x33	; 51
     9dc:	91 e0       	ldi	r25, 0x01	; 1
     9de:	0e 94 bb 05 	call	0xb76	; 0xb76 <_ZN7LedCube14setVoxelsYFastEhhh>
     9e2:	21 96       	adiw	r28, 0x01	; 1
	Cube.task();
	digitalWrite(7, STD_OFF);
}

void setChar(byte Number) {
	for(byte i = 0; i < 8; i++) {
     9e4:	c8 30       	cpi	r28, 0x08	; 8
     9e6:	d1 05       	cpc	r29, r1
     9e8:	79 f7       	brne	.-34     	; 0x9c8 <_Z7setCharh+0x18>
		Cube.setVoxelsYFast(0, 7-i, pgm_read_byte_near(&font[Number][i]));
	}
     9ea:	df 91       	pop	r29
     9ec:	cf 91       	pop	r28
     9ee:	1f 91       	pop	r17
     9f0:	ff 90       	pop	r15
     9f2:	ef 90       	pop	r14
     9f4:	08 95       	ret

000009f6 <setup>:
Transformation CubeTrans(&Cube);
int Counter;
byte CharCounter = 0;

void setup() {
	Cube.init();
     9f6:	83 e3       	ldi	r24, 0x33	; 51
     9f8:	91 e0       	ldi	r25, 0x01	; 1
     9fa:	0e 94 96 05 	call	0xb2c	; 0xb2c <_ZN7LedCube4initEv>
	pinMode(7, OUTPUT);
     9fe:	61 e0       	ldi	r22, 0x01	; 1
     a00:	87 e0       	ldi	r24, 0x07	; 7
     a02:	0e 94 8d 0a 	call	0x151a	; 0x151a <pinMode>
			}
		}
	}
	
	
	Cube.start();
     a06:	83 e3       	ldi	r24, 0x33	; 51
     a08:	91 e0       	ldi	r25, 0x01	; 1
     a0a:	0e 94 5a 05 	call	0xab4	; 0xab4 <_ZN7LedCube5startEv>
	Cube.setNextFrameReady();
     a0e:	83 e3       	ldi	r24, 0x33	; 51
     a10:	91 e0       	ldi	r25, 0x01	; 1
     a12:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZN7LedCube17setNextFrameReadyEv>
	Cube.setNextFrameTimeElapsed();
     a16:	83 e3       	ldi	r24, 0x33	; 51
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	0e 94 06 06 	call	0xc0c	; 0xc0c <_ZN7LedCube23setNextFrameTimeElapsedEv>
	Cube.setVoxelsX(1,1,B(01111110));
     a1e:	2e e7       	ldi	r18, 0x7E	; 126
     a20:	41 e0       	ldi	r20, 0x01	; 1
     a22:	61 e0       	ldi	r22, 0x01	; 1
     a24:	83 e3       	ldi	r24, 0x33	; 51
     a26:	91 e0       	ldi	r25, 0x01	; 1
     a28:	0e 94 a6 05 	call	0xb4c	; 0xb4c <_ZN7LedCube10setVoxelsXEhhh>
	Cube.setVoxelsX(2,7,B(00111100));
     a2c:	2c e3       	ldi	r18, 0x3C	; 60
     a2e:	47 e0       	ldi	r20, 0x07	; 7
     a30:	62 e0       	ldi	r22, 0x02	; 2
     a32:	83 e3       	ldi	r24, 0x33	; 51
     a34:	91 e0       	ldi	r25, 0x01	; 1
     a36:	0e 94 a6 05 	call	0xb4c	; 0xb4c <_ZN7LedCube10setVoxelsXEhhh>
	Cube.setVoxelsX(3,5,B(00011000));
     a3a:	28 e1       	ldi	r18, 0x18	; 24
     a3c:	45 e0       	ldi	r20, 0x05	; 5
     a3e:	63 e0       	ldi	r22, 0x03	; 3
     a40:	83 e3       	ldi	r24, 0x33	; 51
     a42:	91 e0       	ldi	r25, 0x01	; 1
     a44:	0e 94 a6 05 	call	0xb4c	; 0xb4c <_ZN7LedCube10setVoxelsXEhhh>
	setChar(3);
     a48:	83 e0       	ldi	r24, 0x03	; 3
     a4a:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <_Z7setCharh>

00000a4e <_GLOBAL__sub_I_Cube>:
#define RCK_74 12  // storage input
#define SCK_74 11  // clock input

void setChar(byte);

LedCube Cube;
     a4e:	83 e3       	ldi	r24, 0x33	; 51
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	0e 94 39 05 	call	0xa72	; 0xa72 <_ZN7LedCubeC1Ev>
Transformation CubeTrans(&Cube);
     a56:	63 e3       	ldi	r22, 0x33	; 51
     a58:	71 e0       	ldi	r23, 0x01	; 1
     a5a:	81 e3       	ldi	r24, 0x31	; 49
     a5c:	91 e0       	ldi	r25, 0x01	; 1
     a5e:	0c 94 c2 06 	jmp	0xd84	; 0xd84 <_ZN14TransformationC1EP7LedCube>

00000a62 <_GLOBAL__sub_D_Cube>:
     a62:	81 e3       	ldi	r24, 0x31	; 49
     a64:	91 e0       	ldi	r25, 0x01	; 1
     a66:	0e 94 c6 06 	call	0xd8c	; 0xd8c <_ZN14TransformationD1Ev>
#define RCK_74 12  // storage input
#define SCK_74 11  // clock input

void setChar(byte);

LedCube Cube;
     a6a:	83 e3       	ldi	r24, 0x33	; 51
     a6c:	91 e0       	ldi	r25, 0x01	; 1
     a6e:	0c 94 59 05 	jmp	0xab2	; 0xab2 <_ZN7LedCubeD1Ev>

00000a72 <_ZN7LedCubeC1Ev>:
void LedCube::setVoxelsZFast(byte X, byte Y, byte Value)
{
	for(byte Z = 0; Z < LEDCUBE_NUMBER_OF_LEDS_PER_SIDE; Z++) {
		bitWrite(NextFrame[Y][Z], X, bitRead(Value, Z));
	}
} /* setVoxelsZFast */
     a72:	cf 93       	push	r28
     a74:	df 93       	push	r29
     a76:	fc 01       	movw	r30, r24
     a78:	10 82       	st	Z, r1
     a7a:	11 82       	std	Z+1, r1	; 0x01
     a7c:	dc 01       	movw	r26, r24
     a7e:	aa 57       	subi	r26, 0x7A	; 122
     a80:	bf 4f       	sbci	r27, 0xFF	; 255
     a82:	1c 92       	st	X, r1
     a84:	11 96       	adiw	r26, 0x01	; 1
     a86:	1c 92       	st	X, r1
     a88:	ec 01       	movw	r28, r24
     a8a:	26 96       	adiw	r28, 0x06	; 6
     a8c:	d3 83       	std	Z+3, r29	; 0x03
     a8e:	c2 83       	std	Z+2, r28	; 0x02
     a90:	a1 54       	subi	r26, 0x41	; 65
     a92:	b1 09       	sbc	r27, r1
     a94:	b5 83       	std	Z+5, r27	; 0x05
     a96:	a4 83       	std	Z+4, r26	; 0x04
     a98:	80 e4       	ldi	r24, 0x40	; 64
     a9a:	fe 01       	movw	r30, r28
     a9c:	98 2f       	mov	r25, r24
     a9e:	11 92       	st	Z+, r1
     aa0:	9a 95       	dec	r25
     aa2:	e9 f7       	brne	.-6      	; 0xa9e <_ZN7LedCubeC1Ev+0x2c>
     aa4:	fd 01       	movw	r30, r26
     aa6:	11 92       	st	Z+, r1
     aa8:	8a 95       	dec	r24
     aaa:	e9 f7       	brne	.-6      	; 0xaa6 <_ZN7LedCubeC1Ev+0x34>
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	08 95       	ret

00000ab2 <_ZN7LedCubeD1Ev>:
     ab2:	08 95       	ret

00000ab4 <_ZN7LedCube5startEv>:
     ab4:	0f 93       	push	r16
     ab6:	1f 93       	push	r17
     ab8:	cf 93       	push	r28
     aba:	df 93       	push	r29
     abc:	cd b7       	in	r28, 0x3d	; 61
     abe:	de b7       	in	r29, 0x3e	; 62
     ac0:	6e 97       	sbiw	r28, 0x1e	; 30
     ac2:	0f b6       	in	r0, 0x3f	; 63
     ac4:	f8 94       	cli
     ac6:	de bf       	out	0x3e, r29	; 62
     ac8:	0f be       	out	0x3f, r0	; 63
     aca:	cd bf       	out	0x3d, r28	; 61
     acc:	8c 01       	movw	r16, r24
     ace:	91 e1       	ldi	r25, 0x11	; 17
     ad0:	e0 e0       	ldi	r30, 0x00	; 0
     ad2:	f1 e0       	ldi	r31, 0x01	; 1
     ad4:	de 01       	movw	r26, r28
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	01 90       	ld	r0, Z+
     ada:	0d 92       	st	X+, r0
     adc:	9a 95       	dec	r25
     ade:	e1 f7       	brne	.-8      	; 0xad8 <_ZN7LedCube5startEv+0x24>
     ae0:	fe 01       	movw	r30, r28
     ae2:	72 96       	adiw	r30, 0x12	; 18
     ae4:	8d e0       	ldi	r24, 0x0D	; 13
     ae6:	df 01       	movw	r26, r30
     ae8:	1d 92       	st	X+, r1
     aea:	8a 95       	dec	r24
     aec:	e9 f7       	brne	.-6      	; 0xae8 <_ZN7LedCube5startEv+0x34>
     aee:	be 01       	movw	r22, r28
     af0:	6f 5f       	subi	r22, 0xFF	; 255
     af2:	7f 4f       	sbci	r23, 0xFF	; 255
     af4:	8b eb       	ldi	r24, 0xBB	; 187
     af6:	91 e0       	ldi	r25, 0x01	; 1
     af8:	0e 94 80 09 	call	0x1300	; 0x1300 <_ZN5Print7printlnEPKc>
     afc:	83 e0       	ldi	r24, 0x03	; 3
     afe:	f8 01       	movw	r30, r16
     b00:	81 83       	std	Z+1, r24	; 0x01
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	6e 96       	adiw	r28, 0x1e	; 30
     b06:	0f b6       	in	r0, 0x3f	; 63
     b08:	f8 94       	cli
     b0a:	de bf       	out	0x3e, r29	; 62
     b0c:	0f be       	out	0x3f, r0	; 63
     b0e:	cd bf       	out	0x3d, r28	; 61
     b10:	df 91       	pop	r29
     b12:	cf 91       	pop	r28
     b14:	1f 91       	pop	r17
     b16:	0f 91       	pop	r16
     b18:	08 95       	ret

00000b1a <_ZN7LedCube9clearCubeEv>:
     b1a:	2d 98       	cbi	0x05, 5	; 5
     b1c:	88 e4       	ldi	r24, 0x48	; 72
     b1e:	2b 9a       	sbi	0x05, 3	; 5
     b20:	2b 98       	cbi	0x05, 3	; 5
     b22:	81 50       	subi	r24, 0x01	; 1
     b24:	e1 f7       	brne	.-8      	; 0xb1e <_ZN7LedCube9clearCubeEv+0x4>
     b26:	2c 9a       	sbi	0x05, 4	; 5
     b28:	2c 98       	cbi	0x05, 4	; 5
     b2a:	08 95       	ret

00000b2c <_ZN7LedCube4initEv>:
     b2c:	cf 93       	push	r28
     b2e:	df 93       	push	r29
     b30:	ec 01       	movw	r28, r24
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	89 83       	std	Y+1, r24	; 0x01
     b36:	ce 01       	movw	r24, r28
     b38:	0e 94 8d 05 	call	0xb1a	; 0xb1a <_ZN7LedCube9clearCubeEv>
     b3c:	25 9a       	sbi	0x04, 5	; 4
     b3e:	23 9a       	sbi	0x04, 3	; 4
     b40:	24 9a       	sbi	0x04, 4	; 4
     b42:	82 e0       	ldi	r24, 0x02	; 2
     b44:	89 83       	std	Y+1, r24	; 0x01
     b46:	df 91       	pop	r29
     b48:	cf 91       	pop	r28
     b4a:	08 95       	ret

00000b4c <_ZN7LedCube10setVoxelsXEhhh>:
     b4c:	68 30       	cpi	r22, 0x08	; 8
     b4e:	88 f4       	brcc	.+34     	; 0xb72 <_ZN7LedCube10setVoxelsXEhhh+0x26>
     b50:	48 30       	cpi	r20, 0x08	; 8
     b52:	78 f4       	brcc	.+30     	; 0xb72 <_ZN7LedCube10setVoxelsXEhhh+0x26>
     b54:	dc 01       	movw	r26, r24
     b56:	14 96       	adiw	r26, 0x04	; 4
     b58:	ed 91       	ld	r30, X+
     b5a:	fc 91       	ld	r31, X
     b5c:	15 97       	sbiw	r26, 0x05	; 5
     b5e:	b8 e0       	ldi	r27, 0x08	; 8
     b60:	6b 9f       	mul	r22, r27
     b62:	e0 0d       	add	r30, r0
     b64:	f1 1d       	adc	r31, r1
     b66:	11 24       	eor	r1, r1
     b68:	e4 0f       	add	r30, r20
     b6a:	f1 1d       	adc	r31, r1
     b6c:	20 83       	st	Z, r18
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	08 95       	ret
     b72:	81 e0       	ldi	r24, 0x01	; 1
     b74:	08 95       	ret

00000b76 <_ZN7LedCube14setVoxelsYFastEhhh>:
     b76:	df 92       	push	r13
     b78:	ef 92       	push	r14
     b7a:	ff 92       	push	r15
     b7c:	0f 93       	push	r16
     b7e:	1f 93       	push	r17
     b80:	cf 93       	push	r28
     b82:	df 93       	push	r29
     b84:	52 2f       	mov	r21, r18
     b86:	01 e0       	ldi	r16, 0x01	; 1
     b88:	10 e0       	ldi	r17, 0x00	; 0
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	04 c0       	rjmp	.+8      	; 0xb98 <_ZN7LedCube14setVoxelsYFastEhhh+0x22>
     b90:	00 0f       	add	r16, r16
     b92:	11 1f       	adc	r17, r17
     b94:	22 1f       	adc	r18, r18
     b96:	33 1f       	adc	r19, r19
     b98:	6a 95       	dec	r22
     b9a:	d2 f7       	brpl	.-12     	; 0xb90 <_ZN7LedCube14setVoxelsYFastEhhh+0x1a>
     b9c:	d0 2e       	mov	r13, r16
     b9e:	00 95       	com	r16
     ba0:	a0 e0       	ldi	r26, 0x00	; 0
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	25 2f       	mov	r18, r21
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	50 e0       	ldi	r21, 0x00	; 0
     bae:	ec 01       	movw	r28, r24
     bb0:	ec 81       	ldd	r30, Y+4	; 0x04
     bb2:	fd 81       	ldd	r31, Y+5	; 0x05
     bb4:	79 01       	movw	r14, r18
     bb6:	06 2e       	mov	r0, r22
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <_ZN7LedCube14setVoxelsYFastEhhh+0x48>
     bba:	f5 94       	asr	r15
     bbc:	e7 94       	ror	r14
     bbe:	0a 94       	dec	r0
     bc0:	e2 f7       	brpl	.-8      	; 0xbba <_ZN7LedCube14setVoxelsYFastEhhh+0x44>
     bc2:	ea 0f       	add	r30, r26
     bc4:	fb 1f       	adc	r31, r27
     bc6:	e4 0f       	add	r30, r20
     bc8:	f5 1f       	adc	r31, r21
     bca:	10 81       	ld	r17, Z
     bcc:	e0 fe       	sbrs	r14, 0
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <_ZN7LedCube14setVoxelsYFastEhhh+0x5e>
     bd0:	1d 29       	or	r17, r13
     bd2:	01 c0       	rjmp	.+2      	; 0xbd6 <_ZN7LedCube14setVoxelsYFastEhhh+0x60>
     bd4:	10 23       	and	r17, r16
     bd6:	10 83       	st	Z, r17
     bd8:	6f 5f       	subi	r22, 0xFF	; 255
     bda:	7f 4f       	sbci	r23, 0xFF	; 255
     bdc:	18 96       	adiw	r26, 0x08	; 8
     bde:	68 30       	cpi	r22, 0x08	; 8
     be0:	71 05       	cpc	r23, r1
     be2:	29 f7       	brne	.-54     	; 0xbae <_ZN7LedCube14setVoxelsYFastEhhh+0x38>
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	ff 90       	pop	r15
     bee:	ef 90       	pop	r14
     bf0:	df 90       	pop	r13
     bf2:	08 95       	ret

00000bf4 <_ZN7LedCube17setNextFrameReadyEv>:
 *  \return         E_OK
 *                  E_NOT_OK
 *****************************************************************************************************************************************************/
stdReturnType LedCube::setNextFrameReady()
{
    if(State == LEDCUBE_STATE_RUNNING) {
     bf4:	fc 01       	movw	r30, r24
     bf6:	21 81       	ldd	r18, Z+1	; 0x01
     bf8:	23 30       	cpi	r18, 0x03	; 3
     bfa:	31 f4       	brne	.+12     	; 0xc08 <_ZN7LedCube17setNextFrameReadyEv+0x14>
        NextFrameReady = true;
     bfc:	ea 57       	subi	r30, 0x7A	; 122
     bfe:	ff 4f       	sbci	r31, 0xFF	; 255
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	80 83       	st	Z, r24
        return E_OK;
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	08 95       	ret
    } else {
        return E_NOT_OK;
     c08:	81 e0       	ldi	r24, 0x01	; 1
    }
}
     c0a:	08 95       	ret

00000c0c <_ZN7LedCube23setNextFrameTimeElapsedEv>:
 *  \return         E_OK
 *                  E_NOT_OK
 *****************************************************************************************************************************************************/
stdReturnType LedCube::setNextFrameTimeElapsed()
{
    if(State == LEDCUBE_STATE_RUNNING) {
     c0c:	fc 01       	movw	r30, r24
     c0e:	21 81       	ldd	r18, Z+1	; 0x01
     c10:	23 30       	cpi	r18, 0x03	; 3
     c12:	31 f4       	brne	.+12     	; 0xc20 <_ZN7LedCube23setNextFrameTimeElapsedEv+0x14>
        NextFrameTimeElapsed = true;
     c14:	e9 57       	subi	r30, 0x79	; 121
     c16:	ff 4f       	sbci	r31, 0xFF	; 255
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	80 83       	st	Z, r24
        return E_OK;
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	08 95       	ret
    } else {
        return E_NOT_OK;
     c20:	81 e0       	ldi	r24, 0x01	; 1
    }
}
     c22:	08 95       	ret

00000c24 <_ZN7LedCube8sendDataEh>:
 *
 *  \param[in]      Data    data (Byte) to send
 *  \return         -
 *****************************************************************************************************************************************************/
void LedCube::sendData(byte Data)
{
     c24:	87 e0       	ldi	r24, 0x07	; 7
     c26:	90 e0       	ldi	r25, 0x00	; 0
    for (byte i = 0; i < 8; i++) {
        // LSB First
        //digitalWrite(DataInPin, !!(Data & (1 << i)));
        // MSB First
        digitalWriteFast(LEDCUBE_DATA_IN_PIN, !!(Data & (1 << (7 - i))));
     c28:	70 e0       	ldi	r23, 0x00	; 0
     c2a:	9b 01       	movw	r18, r22
     c2c:	08 2e       	mov	r0, r24
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <_ZN7LedCube8sendDataEh+0x10>
     c30:	35 95       	asr	r19
     c32:	27 95       	ror	r18
     c34:	0a 94       	dec	r0
     c36:	e2 f7       	brpl	.-8      	; 0xc30 <_ZN7LedCube8sendDataEh+0xc>
     c38:	20 ff       	sbrs	r18, 0
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <_ZN7LedCube8sendDataEh+0x1c>
     c3c:	2d 9a       	sbi	0x05, 5	; 5
     c3e:	01 c0       	rjmp	.+2      	; 0xc42 <_ZN7LedCube8sendDataEh+0x1e>
     c40:	2d 98       	cbi	0x05, 5	; 5
        // toggle clock pin
        digitalWriteFast(LEDCUBE_CLOCK_PIN, HIGH);
     c42:	2b 9a       	sbi	0x05, 3	; 5
        digitalWriteFast(LEDCUBE_CLOCK_PIN, LOW);
     c44:	2b 98       	cbi	0x05, 3	; 5
     c46:	01 97       	sbiw	r24, 0x01	; 1
     c48:	80 f7       	brcc	.-32     	; 0xc2a <_ZN7LedCube8sendDataEh+0x6>
    }
} /* sendData */
     c4a:	08 95       	ret

00000c4c <_ZN7LedCube9showLayerEh>:
 *  \param[in]      Layer       layer which should be shown on the cube
 *  \return         E_OK
 *                  E_NOT_OK
 *****************************************************************************************************************************************************/
stdReturnType LedCube::showLayer(byte Layer)
{
     c4c:	ef 92       	push	r14
     c4e:	ff 92       	push	r15
     c50:	0f 93       	push	r16
     c52:	1f 93       	push	r17
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
    stdReturnType ReturnValue = E_NOT_OK;
    
    if(Layer < LEDCUBE_NUMBER_OF_LAYERS) {
     c58:	68 30       	cpi	r22, 0x08	; 8
     c5a:	30 f5       	brcc	.+76     	; 0xca8 <_ZN7LedCube9showLayerEh+0x5c>
     c5c:	ec 01       	movw	r28, r24
        /* put on given layer */
        sendData(1 << Layer);
     c5e:	06 2f       	mov	r16, r22
     c60:	10 e0       	ldi	r17, 0x00	; 0
     c62:	81 e0       	ldi	r24, 0x01	; 1
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	9c 01       	movw	r18, r24
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <_ZN7LedCube9showLayerEh+0x22>
     c6a:	22 0f       	add	r18, r18
     c6c:	33 1f       	adc	r19, r19
     c6e:	6a 95       	dec	r22
     c70:	e2 f7       	brpl	.-8      	; 0xc6a <_ZN7LedCube9showLayerEh+0x1e>
     c72:	b9 01       	movw	r22, r18
     c74:	ce 01       	movw	r24, r28
     c76:	0e 94 12 06 	call	0xc24	; 0xc24 <_ZN7LedCube8sendDataEh>
     c7a:	e1 2c       	mov	r14, r1
     c7c:	f1 2c       	mov	r15, r1
        /* send the layer data to the shift registers */
        for(byte Y = 0; Y < LEDCUBE_NUMBER_OF_LEDS_PER_SIDE; Y++) {
            sendData(CurrentFrame[Y][Layer]);
     c7e:	ea 81       	ldd	r30, Y+2	; 0x02
     c80:	fb 81       	ldd	r31, Y+3	; 0x03
     c82:	ee 0d       	add	r30, r14
     c84:	ff 1d       	adc	r31, r15
     c86:	e0 0f       	add	r30, r16
     c88:	f1 1f       	adc	r31, r17
     c8a:	60 81       	ld	r22, Z
     c8c:	ce 01       	movw	r24, r28
     c8e:	0e 94 12 06 	call	0xc24	; 0xc24 <_ZN7LedCube8sendDataEh>
     c92:	38 e0       	ldi	r19, 0x08	; 8
     c94:	e3 0e       	add	r14, r19
     c96:	f1 1c       	adc	r15, r1
    
    if(Layer < LEDCUBE_NUMBER_OF_LAYERS) {
        /* put on given layer */
        sendData(1 << Layer);
        /* send the layer data to the shift registers */
        for(byte Y = 0; Y < LEDCUBE_NUMBER_OF_LEDS_PER_SIDE; Y++) {
     c98:	80 e4       	ldi	r24, 0x40	; 64
     c9a:	e8 16       	cp	r14, r24
     c9c:	f1 04       	cpc	r15, r1
     c9e:	79 f7       	brne	.-34     	; 0xc7e <_ZN7LedCube9showLayerEh+0x32>
            sendData(CurrentFrame[Y][Layer]);
        }
        // toggle storage pin
        digitalWriteFast(LEDCUBE_STORAGE_PIN, HIGH);
     ca0:	2c 9a       	sbi	0x05, 4	; 5
        digitalWriteFast(LEDCUBE_STORAGE_PIN, LOW);
     ca2:	2c 98       	cbi	0x05, 4	; 5
     ca4:	80 e0       	ldi	r24, 0x00	; 0
     ca6:	01 c0       	rjmp	.+2      	; 0xcaa <_ZN7LedCube9showLayerEh+0x5e>
 *  \return         E_OK
 *                  E_NOT_OK
 *****************************************************************************************************************************************************/
stdReturnType LedCube::showLayer(byte Layer)
{
    stdReturnType ReturnValue = E_NOT_OK;
     ca8:	81 e0       	ldi	r24, 0x01	; 1
        digitalWriteFast(LEDCUBE_STORAGE_PIN, LOW);

        ReturnValue = E_OK;
    }
    return ReturnValue;
} /* showLayer */
     caa:	df 91       	pop	r29
     cac:	cf 91       	pop	r28
     cae:	1f 91       	pop	r17
     cb0:	0f 91       	pop	r16
     cb2:	ff 90       	pop	r15
     cb4:	ef 90       	pop	r14
     cb6:	08 95       	ret

00000cb8 <_ZN7LedCube4taskEv>:
 *                  has to be called periodically
 *                  
 *  \return         -
 *****************************************************************************************************************************************************/
void LedCube::task()
{
     cb8:	cf 93       	push	r28
     cba:	df 93       	push	r29
     cbc:	fc 01       	movw	r30, r24
    if(State == LEDCUBE_STATE_RUNNING) {
     cbe:	81 81       	ldd	r24, Z+1	; 0x01
     cc0:	83 30       	cpi	r24, 0x03	; 3
     cc2:	11 f5       	brne	.+68     	; 0xd08 <_ZN7LedCube4taskEv+0x50>
        if(CurrentLayer >= LEDCUBE_NUMBER_OF_LAYERS) {
     cc4:	80 81       	ld	r24, Z
     cc6:	88 30       	cpi	r24, 0x08	; 8
     cc8:	b8 f0       	brcs	.+46     	; 0xcf8 <_ZN7LedCube4taskEv+0x40>
            CurrentLayer = 0;
     cca:	10 82       	st	Z, r1
			/* is next frame ready to show? */
			if(NextFrameReady && NextFrameTimeElapsed) { 
     ccc:	ef 01       	movw	r28, r30
     cce:	ca 57       	subi	r28, 0x7A	; 122
     cd0:	df 4f       	sbci	r29, 0xFF	; 255
     cd2:	88 81       	ld	r24, Y
     cd4:	88 23       	and	r24, r24
     cd6:	81 f0       	breq	.+32     	; 0xcf8 <_ZN7LedCube4taskEv+0x40>
     cd8:	df 01       	movw	r26, r30
     cda:	a9 57       	subi	r26, 0x79	; 121
     cdc:	bf 4f       	sbci	r27, 0xFF	; 255
     cde:	8c 91       	ld	r24, X
     ce0:	88 23       	and	r24, r24
     ce2:	51 f0       	breq	.+20     	; 0xcf8 <_ZN7LedCube4taskEv+0x40>
 *****************************************************************************************************************************************************/
void LedCube::switchBufferPointer()
{
        byte (*pTmp)[LEDCUBE_NUMBER_OF_LEDS_PER_SIDE];

        pTmp = CurrentFrame;
     ce4:	82 81       	ldd	r24, Z+2	; 0x02
     ce6:	93 81       	ldd	r25, Z+3	; 0x03
        CurrentFrame = NextFrame;
     ce8:	24 81       	ldd	r18, Z+4	; 0x04
     cea:	35 81       	ldd	r19, Z+5	; 0x05
     cec:	33 83       	std	Z+3, r19	; 0x03
     cee:	22 83       	std	Z+2, r18	; 0x02
        NextFrame = pTmp;
     cf0:	95 83       	std	Z+5, r25	; 0x05
     cf2:	84 83       	std	Z+4, r24	; 0x04
        if(CurrentLayer >= LEDCUBE_NUMBER_OF_LAYERS) {
            CurrentLayer = 0;
			/* is next frame ready to show? */
			if(NextFrameReady && NextFrameTimeElapsed) { 
				showNextFrame();
				NextFrameReady = false;
     cf4:	18 82       	st	Y, r1
				NextFrameTimeElapsed = false;
     cf6:	1c 92       	st	X, r1
     cf8:	ef 01       	movw	r28, r30
			}
        }
        showLayer(CurrentLayer);
     cfa:	60 81       	ld	r22, Z
     cfc:	cf 01       	movw	r24, r30
     cfe:	0e 94 26 06 	call	0xc4c	; 0xc4c <_ZN7LedCube9showLayerEh>
        CurrentLayer++;
     d02:	88 81       	ld	r24, Y
     d04:	8f 5f       	subi	r24, 0xFF	; 255
     d06:	88 83       	st	Y, r24
    }
} /* task */
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	08 95       	ret

00000d0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>:
		for(byte Y = 0; Y < LEDCUBE_NUMBER_OF_LEDS_PER_SIDE; Y++) {
			pCube->setVoxelsXFast(Y, Z, pCube->getVoxelsXFast(Y, Z) << 1);
			if(Rotate) pCube->writeVoxelFast(0, Y, Z, pCube->getVoxelFast(LEDCUBE_NUMBER_OF_LEDS_PER_SIDE - 1, Y, Z));
		}
	}
} /* shiftBackwardFast */
     d0e:	0f 93       	push	r16
     d10:	dc 01       	movw	r26, r24
     d12:	50 e0       	ldi	r21, 0x00	; 0
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	00 23       	and	r16, r16
     d18:	d1 f0       	breq	.+52     	; 0xd4e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x40>
     d1a:	fa 01       	movw	r30, r20
     d1c:	93 e0       	ldi	r25, 0x03	; 3
     d1e:	ee 0f       	add	r30, r30
     d20:	ff 1f       	adc	r31, r31
     d22:	9a 95       	dec	r25
     d24:	e1 f7       	brne	.-8      	; 0xd1e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x10>
     d26:	ad 01       	movw	r20, r26
     d28:	4e 0f       	add	r20, r30
     d2a:	5f 1f       	adc	r21, r31
     d2c:	fa 01       	movw	r30, r20
     d2e:	e2 0f       	add	r30, r18
     d30:	f3 1f       	adc	r31, r19
     d32:	81 e0       	ldi	r24, 0x01	; 1
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	a0 e0       	ldi	r26, 0x00	; 0
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	04 c0       	rjmp	.+8      	; 0xd44 <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x36>
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	aa 1f       	adc	r26, r26
     d42:	bb 1f       	adc	r27, r27
     d44:	6a 95       	dec	r22
     d46:	d2 f7       	brpl	.-12     	; 0xd3c <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x2e>
     d48:	20 81       	ld	r18, Z
     d4a:	82 2b       	or	r24, r18
     d4c:	18 c0       	rjmp	.+48     	; 0xd7e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x70>
     d4e:	83 e0       	ldi	r24, 0x03	; 3
     d50:	44 0f       	add	r20, r20
     d52:	55 1f       	adc	r21, r21
     d54:	8a 95       	dec	r24
     d56:	e1 f7       	brne	.-8      	; 0xd50 <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x42>
     d58:	4a 0f       	add	r20, r26
     d5a:	5b 1f       	adc	r21, r27
     d5c:	fa 01       	movw	r30, r20
     d5e:	e2 0f       	add	r30, r18
     d60:	f3 1f       	adc	r31, r19
     d62:	81 e0       	ldi	r24, 0x01	; 1
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	a0 e0       	ldi	r26, 0x00	; 0
     d68:	b0 e0       	ldi	r27, 0x00	; 0
     d6a:	04 c0       	rjmp	.+8      	; 0xd74 <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x66>
     d6c:	88 0f       	add	r24, r24
     d6e:	99 1f       	adc	r25, r25
     d70:	aa 1f       	adc	r26, r26
     d72:	bb 1f       	adc	r27, r27
     d74:	6a 95       	dec	r22
     d76:	d2 f7       	brpl	.-12     	; 0xd6c <_ZN7LedCube14writeVoxelFastEhhhb.isra.0+0x5e>
     d78:	80 95       	com	r24
     d7a:	90 81       	ld	r25, Z
     d7c:	89 23       	and	r24, r25
     d7e:	80 83       	st	Z, r24
     d80:	0f 91       	pop	r16
     d82:	08 95       	ret

00000d84 <_ZN14TransformationC1EP7LedCube>:
     d84:	fc 01       	movw	r30, r24
     d86:	71 83       	std	Z+1, r23	; 0x01
     d88:	60 83       	st	Z, r22
     d8a:	08 95       	ret

00000d8c <_ZN14TransformationD1Ev>:
     d8c:	08 95       	ret

00000d8e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh>:
 *  \details        
 *                  
 *  \return         -
 *****************************************************************************************************************************************************/
stdReturnType Transformation::shiftCircle(LedCubeAxisType ShiftAxis, TransformationRotationDirectionType Direction, byte Circle)
{	
     d8e:	2f 92       	push	r2
     d90:	3f 92       	push	r3
     d92:	4f 92       	push	r4
     d94:	5f 92       	push	r5
     d96:	6f 92       	push	r6
     d98:	7f 92       	push	r7
     d9a:	8f 92       	push	r8
     d9c:	9f 92       	push	r9
     d9e:	af 92       	push	r10
     da0:	bf 92       	push	r11
     da2:	cf 92       	push	r12
     da4:	df 92       	push	r13
     da6:	ef 92       	push	r14
     da8:	ff 92       	push	r15
     daa:	0f 93       	push	r16
     dac:	1f 93       	push	r17
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
     db2:	00 d0       	rcall	.+0      	; 0xdb4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x26>
     db4:	1f 92       	push	r1
     db6:	cd b7       	in	r28, 0x3d	; 61
     db8:	de b7       	in	r29, 0x3e	; 62
	const byte LEDs = LEDCUBE_NUMBER_OF_LEDS_PER_SIDE;

	if(Circle > 0 && Circle <= LEDs / 2) {
     dba:	3f ef       	ldi	r19, 0xFF	; 255
     dbc:	32 0f       	add	r19, r18
     dbe:	3a 83       	std	Y+2, r19	; 0x02
     dc0:	34 30       	cpi	r19, 0x04	; 4
     dc2:	08 f0       	brcs	.+2      	; 0xdc6 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x38>
     dc4:	8d c1       	rjmp	.+794    	; 0x10e0 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x352>
     dc6:	7c 01       	movw	r14, r24
		Circle--;
		if(TRANSFORMATION_ROTATION_CLOCKWISE == Direction) {
     dc8:	41 11       	cpse	r20, r1
     dca:	c3 c0       	rjmp	.+390    	; 0xf52 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1c4>
			if(LEDCUBE_AXIS_Z == ShiftAxis) {
     dcc:	62 30       	cpi	r22, 0x02	; 2
     dce:	09 f0       	breq	.+2      	; 0xdd2 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x44>
     dd0:	89 c1       	rjmp	.+786    	; 0x10e4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x356>
				for(byte Z = 0; Z < LEDs; Z++) {
					/* shift front, right, back, left */
					for(int8_t Y = Circle; Y < LEDs-1-Circle; Y++) pCube->writeVoxelFast(Circle, Y, Z, pCube->getVoxelFast(Circle, Y+1, Z));
					for(int8_t X = Circle; X < LEDs-1-Circle; X++) pCube->writeVoxelFast(X, LEDs-1-Circle, Z, pCube->getVoxelFast(X+1, LEDs-1-Circle, Z));
     dd2:	88 e0       	ldi	r24, 0x08	; 8
     dd4:	82 1b       	sub	r24, r18
     dd6:	8b 83       	std	Y+3, r24	; 0x03
	stdReturnType getVoxel(byte, byte, byte, boolean*);

	inline void setVoxelFast(byte X, byte Y, byte Z) { bitSet(NextFrame[Y][Z], X); }
    inline void clearVoxelFast(byte X, byte Y, byte Z) { bitClear(NextFrame[Y][Z], X); }
    inline void writeVoxelFast(byte X, byte Y, byte Z, boolean Value) { bitWrite(NextFrame[Y][Z], X, Value); }
    inline byte getVoxelFast(byte X, byte Y, byte Z) { return bitRead(CurrentFrame[Y][Z], X); }
     dd8:	98 e0       	ldi	r25, 0x08	; 8
     dda:	89 9f       	mul	r24, r25
     ddc:	30 01       	movw	r6, r0
     dde:	11 24       	eor	r1, r1
     de0:	a3 2e       	mov	r10, r19
     de2:	b1 2c       	mov	r11, r1
     de4:	25 01       	movw	r4, r10
     de6:	93 e0       	ldi	r25, 0x03	; 3
     de8:	44 0c       	add	r4, r4
     dea:	55 1c       	adc	r5, r5
     dec:	9a 95       	dec	r25
     dee:	e1 f7       	brne	.-8      	; 0xde8 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x5a>
     df0:	c1 2c       	mov	r12, r1
     df2:	d1 2c       	mov	r13, r1
		Circle--;
		if(TRANSFORMATION_ROTATION_CLOCKWISE == Direction) {
			if(LEDCUBE_AXIS_Z == ShiftAxis) {
				for(byte Z = 0; Z < LEDs; Z++) {
					/* shift front, right, back, left */
					for(int8_t Y = Circle; Y < LEDs-1-Circle; Y++) pCube->writeVoxelFast(Circle, Y, Z, pCube->getVoxelFast(Circle, Y+1, Z));
     df4:	87 e0       	ldi	r24, 0x07	; 7
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	4c 01       	movw	r8, r24
     dfa:	8a 18       	sub	r8, r10
     dfc:	9b 08       	sbc	r9, r11
     dfe:	3c 2c       	mov	r3, r12
     e00:	2a 80       	ldd	r2, Y+2	; 0x02
     e02:	42 2d       	mov	r20, r2
     e04:	84 2f       	mov	r24, r20
     e06:	04 2e       	mov	r0, r20
     e08:	00 0c       	add	r0, r0
     e0a:	99 0b       	sbc	r25, r25
     e0c:	88 15       	cp	r24, r8
     e0e:	99 05       	cpc	r25, r9
     e10:	0c f5       	brge	.+66     	; 0xe54 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0xc6>
     e12:	31 e0       	ldi	r19, 0x01	; 1
     e14:	34 0f       	add	r19, r20
     e16:	d7 01       	movw	r26, r14
     e18:	ed 91       	ld	r30, X+
     e1a:	fc 91       	ld	r31, X
     e1c:	a2 81       	ldd	r26, Z+2	; 0x02
     e1e:	b3 81       	ldd	r27, Z+3	; 0x03
     e20:	88 e0       	ldi	r24, 0x08	; 8
     e22:	38 9f       	mul	r19, r24
     e24:	a0 0d       	add	r26, r0
     e26:	b1 1d       	adc	r27, r1
     e28:	11 24       	eor	r1, r1
     e2a:	ac 0d       	add	r26, r12
     e2c:	bd 1d       	adc	r27, r13
     e2e:	0c 91       	ld	r16, X
     e30:	10 e0       	ldi	r17, 0x00	; 0
     e32:	0a 80       	ldd	r0, Y+2	; 0x02
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0xac>
     e36:	15 95       	asr	r17
     e38:	07 95       	ror	r16
     e3a:	0a 94       	dec	r0
     e3c:	e2 f7       	brpl	.-8      	; 0xe36 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0xa8>
     e3e:	01 70       	andi	r16, 0x01	; 1
     e40:	23 2d       	mov	r18, r3
     e42:	6a 81       	ldd	r22, Y+2	; 0x02
     e44:	84 81       	ldd	r24, Z+4	; 0x04
     e46:	95 81       	ldd	r25, Z+5	; 0x05
     e48:	39 83       	std	Y+1, r19	; 0x01
     e4a:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
     e4e:	39 81       	ldd	r19, Y+1	; 0x01
     e50:	43 2f       	mov	r20, r19
     e52:	d8 cf       	rjmp	.-80     	; 0xe04 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x76>
					for(int8_t X = Circle; X < LEDs-1-Circle; X++) pCube->writeVoxelFast(X, LEDs-1-Circle, Z, pCube->getVoxelFast(X+1, LEDs-1-Circle, Z));
     e54:	82 2d       	mov	r24, r2
     e56:	02 2c       	mov	r0, r2
     e58:	00 0c       	add	r0, r0
     e5a:	99 0b       	sbc	r25, r25
     e5c:	88 15       	cp	r24, r8
     e5e:	99 05       	cpc	r25, r9
     e60:	fc f4       	brge	.+62     	; 0xea0 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x112>
     e62:	31 e0       	ldi	r19, 0x01	; 1
     e64:	32 0d       	add	r19, r2
     e66:	d7 01       	movw	r26, r14
     e68:	ed 91       	ld	r30, X+
     e6a:	fc 91       	ld	r31, X
     e6c:	a2 81       	ldd	r26, Z+2	; 0x02
     e6e:	b3 81       	ldd	r27, Z+3	; 0x03
     e70:	a6 0d       	add	r26, r6
     e72:	b7 1d       	adc	r27, r7
     e74:	ac 0d       	add	r26, r12
     e76:	bd 1d       	adc	r27, r13
     e78:	0c 91       	ld	r16, X
     e7a:	10 e0       	ldi	r17, 0x00	; 0
     e7c:	03 2e       	mov	r0, r19
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0xf6>
     e80:	15 95       	asr	r17
     e82:	07 95       	ror	r16
     e84:	0a 94       	dec	r0
     e86:	e2 f7       	brpl	.-8      	; 0xe80 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0xf2>
     e88:	01 70       	andi	r16, 0x01	; 1
     e8a:	23 2d       	mov	r18, r3
     e8c:	4b 81       	ldd	r20, Y+3	; 0x03
     e8e:	62 2d       	mov	r22, r2
     e90:	84 81       	ldd	r24, Z+4	; 0x04
     e92:	95 81       	ldd	r25, Z+5	; 0x05
     e94:	39 83       	std	Y+1, r19	; 0x01
     e96:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
     e9a:	39 81       	ldd	r19, Y+1	; 0x01
     e9c:	23 2e       	mov	r2, r19
     e9e:	da cf       	rjmp	.-76     	; 0xe54 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0xc6>
					for(int8_t Y = LEDs-1-Circle; Y > Circle; Y--) pCube->writeVoxelFast(LEDs-1-Circle, Y, Z, pCube->getVoxelFast(LEDs-1-Circle, Y-1, Z));
     ea0:	2b 80       	ldd	r2, Y+3	; 0x03
     ea2:	42 2d       	mov	r20, r2
     ea4:	84 2f       	mov	r24, r20
     ea6:	04 2e       	mov	r0, r20
     ea8:	00 0c       	add	r0, r0
     eaa:	99 0b       	sbc	r25, r25
     eac:	a8 16       	cp	r10, r24
     eae:	b9 06       	cpc	r11, r25
     eb0:	0c f5       	brge	.+66     	; 0xef4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x166>
     eb2:	3f ef       	ldi	r19, 0xFF	; 255
     eb4:	34 0f       	add	r19, r20
     eb6:	d7 01       	movw	r26, r14
     eb8:	ed 91       	ld	r30, X+
     eba:	fc 91       	ld	r31, X
     ebc:	a2 81       	ldd	r26, Z+2	; 0x02
     ebe:	b3 81       	ldd	r27, Z+3	; 0x03
     ec0:	88 e0       	ldi	r24, 0x08	; 8
     ec2:	38 9f       	mul	r19, r24
     ec4:	a0 0d       	add	r26, r0
     ec6:	b1 1d       	adc	r27, r1
     ec8:	11 24       	eor	r1, r1
     eca:	ac 0d       	add	r26, r12
     ecc:	bd 1d       	adc	r27, r13
     ece:	0c 91       	ld	r16, X
     ed0:	10 e0       	ldi	r17, 0x00	; 0
     ed2:	0b 80       	ldd	r0, Y+3	; 0x03
     ed4:	02 c0       	rjmp	.+4      	; 0xeda <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x14c>
     ed6:	15 95       	asr	r17
     ed8:	07 95       	ror	r16
     eda:	0a 94       	dec	r0
     edc:	e2 f7       	brpl	.-8      	; 0xed6 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x148>
     ede:	01 70       	andi	r16, 0x01	; 1
     ee0:	23 2d       	mov	r18, r3
     ee2:	6b 81       	ldd	r22, Y+3	; 0x03
     ee4:	84 81       	ldd	r24, Z+4	; 0x04
     ee6:	95 81       	ldd	r25, Z+5	; 0x05
     ee8:	39 83       	std	Y+1, r19	; 0x01
     eea:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
     eee:	39 81       	ldd	r19, Y+1	; 0x01
     ef0:	43 2f       	mov	r20, r19
     ef2:	d8 cf       	rjmp	.-80     	; 0xea4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x116>
					for(int8_t X = LEDs-1-Circle; X > Circle; X--) pCube->writeVoxelFast(X, Circle, Z, pCube->getVoxelFast(X-1, Circle, Z));
     ef4:	82 2d       	mov	r24, r2
     ef6:	02 2c       	mov	r0, r2
     ef8:	00 0c       	add	r0, r0
     efa:	99 0b       	sbc	r25, r25
     efc:	a8 16       	cp	r10, r24
     efe:	b9 06       	cpc	r11, r25
     f00:	fc f4       	brge	.+62     	; 0xf40 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1b2>
     f02:	3f ef       	ldi	r19, 0xFF	; 255
     f04:	32 0d       	add	r19, r2
     f06:	d7 01       	movw	r26, r14
     f08:	ed 91       	ld	r30, X+
     f0a:	fc 91       	ld	r31, X
     f0c:	a2 81       	ldd	r26, Z+2	; 0x02
     f0e:	b3 81       	ldd	r27, Z+3	; 0x03
     f10:	a4 0d       	add	r26, r4
     f12:	b5 1d       	adc	r27, r5
     f14:	ac 0d       	add	r26, r12
     f16:	bd 1d       	adc	r27, r13
     f18:	0c 91       	ld	r16, X
     f1a:	10 e0       	ldi	r17, 0x00	; 0
     f1c:	03 2e       	mov	r0, r19
     f1e:	02 c0       	rjmp	.+4      	; 0xf24 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x196>
     f20:	15 95       	asr	r17
     f22:	07 95       	ror	r16
     f24:	0a 94       	dec	r0
     f26:	e2 f7       	brpl	.-8      	; 0xf20 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x192>
     f28:	01 70       	andi	r16, 0x01	; 1
     f2a:	23 2d       	mov	r18, r3
     f2c:	4a 81       	ldd	r20, Y+2	; 0x02
     f2e:	62 2d       	mov	r22, r2
     f30:	84 81       	ldd	r24, Z+4	; 0x04
     f32:	95 81       	ldd	r25, Z+5	; 0x05
     f34:	39 83       	std	Y+1, r19	; 0x01
     f36:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
     f3a:	39 81       	ldd	r19, Y+1	; 0x01
     f3c:	23 2e       	mov	r2, r19
     f3e:	da cf       	rjmp	.-76     	; 0xef4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x166>
     f40:	bf ef       	ldi	r27, 0xFF	; 255
     f42:	cb 1a       	sub	r12, r27
     f44:	db 0a       	sbc	r13, r27

	if(Circle > 0 && Circle <= LEDs / 2) {
		Circle--;
		if(TRANSFORMATION_ROTATION_CLOCKWISE == Direction) {
			if(LEDCUBE_AXIS_Z == ShiftAxis) {
				for(byte Z = 0; Z < LEDs; Z++) {
     f46:	38 e0       	ldi	r19, 0x08	; 8
     f48:	c3 16       	cp	r12, r19
     f4a:	d1 04       	cpc	r13, r1
     f4c:	09 f0       	breq	.+2      	; 0xf50 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1c2>
     f4e:	57 cf       	rjmp	.-338    	; 0xdfe <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x70>
     f50:	c9 c0       	rjmp	.+402    	; 0x10e4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x356>
					for(int8_t Y = LEDs-1-Circle; Y > Circle; Y--) pCube->writeVoxelFast(LEDs-1-Circle, Y, Z, pCube->getVoxelFast(LEDs-1-Circle, Y-1, Z));
					for(int8_t X = LEDs-1-Circle; X > Circle; X--) pCube->writeVoxelFast(X, Circle, Z, pCube->getVoxelFast(X-1, Circle, Z));
				}
			}
		}
		if(TRANSFORMATION_ROTATION_COUNTERCLOCKWISE == Direction) {
     f52:	41 30       	cpi	r20, 0x01	; 1
     f54:	09 f0       	breq	.+2      	; 0xf58 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1ca>
     f56:	c6 c0       	rjmp	.+396    	; 0x10e4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x356>
			if(LEDCUBE_AXIS_Z == ShiftAxis) {
     f58:	62 30       	cpi	r22, 0x02	; 2
     f5a:	09 f0       	breq	.+2      	; 0xf5e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1d0>
     f5c:	c3 c0       	rjmp	.+390    	; 0x10e4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x356>
     f5e:	3a 81       	ldd	r19, Y+2	; 0x02
     f60:	a3 2e       	mov	r10, r19
     f62:	b1 2c       	mov	r11, r1
     f64:	35 01       	movw	r6, r10
     f66:	83 e0       	ldi	r24, 0x03	; 3
     f68:	66 0c       	add	r6, r6
     f6a:	77 1c       	adc	r7, r7
     f6c:	8a 95       	dec	r24
     f6e:	e1 f7       	brne	.-8      	; 0xf68 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1da>
				for(byte Z = 0; Z < LEDs; Z++) {
					/* shift left, back, right, front */
					for(int8_t X = Circle; X < LEDs-1-Circle; X++) pCube->writeVoxelFast(X, Circle, Z, pCube->getVoxelFast(X+1, Circle, Z));
					for(int8_t Y = Circle; Y < LEDs-1-Circle; Y++) pCube->writeVoxelFast(LEDs-1-Circle, Y, Z, pCube->getVoxelFast(LEDs-1-Circle, Y+1, Z));
					for(int8_t X = LEDs-1-Circle; X > Circle; X--) pCube->writeVoxelFast(X, LEDs-1-Circle, Z, pCube->getVoxelFast(X-1, LEDs-1-Circle, Z));
     f70:	88 e0       	ldi	r24, 0x08	; 8
     f72:	82 1b       	sub	r24, r18
     f74:	8b 83       	std	Y+3, r24	; 0x03
     f76:	98 e0       	ldi	r25, 0x08	; 8
     f78:	89 9f       	mul	r24, r25
     f7a:	20 01       	movw	r4, r0
     f7c:	11 24       	eor	r1, r1
     f7e:	c1 2c       	mov	r12, r1
     f80:	d1 2c       	mov	r13, r1
		}
		if(TRANSFORMATION_ROTATION_COUNTERCLOCKWISE == Direction) {
			if(LEDCUBE_AXIS_Z == ShiftAxis) {
				for(byte Z = 0; Z < LEDs; Z++) {
					/* shift left, back, right, front */
					for(int8_t X = Circle; X < LEDs-1-Circle; X++) pCube->writeVoxelFast(X, Circle, Z, pCube->getVoxelFast(X+1, Circle, Z));
     f82:	87 e0       	ldi	r24, 0x07	; 7
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	4c 01       	movw	r8, r24
     f88:	8a 18       	sub	r8, r10
     f8a:	9b 08       	sbc	r9, r11
     f8c:	3c 2c       	mov	r3, r12
     f8e:	2a 80       	ldd	r2, Y+2	; 0x02
     f90:	62 2d       	mov	r22, r2
     f92:	86 2f       	mov	r24, r22
     f94:	06 2e       	mov	r0, r22
     f96:	00 0c       	add	r0, r0
     f98:	99 0b       	sbc	r25, r25
     f9a:	88 15       	cp	r24, r8
     f9c:	99 05       	cpc	r25, r9
     f9e:	f4 f4       	brge	.+60     	; 0xfdc <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x24e>
     fa0:	31 e0       	ldi	r19, 0x01	; 1
     fa2:	36 0f       	add	r19, r22
     fa4:	d7 01       	movw	r26, r14
     fa6:	ed 91       	ld	r30, X+
     fa8:	fc 91       	ld	r31, X
     faa:	a2 81       	ldd	r26, Z+2	; 0x02
     fac:	b3 81       	ldd	r27, Z+3	; 0x03
     fae:	a6 0d       	add	r26, r6
     fb0:	b7 1d       	adc	r27, r7
     fb2:	ac 0d       	add	r26, r12
     fb4:	bd 1d       	adc	r27, r13
     fb6:	0c 91       	ld	r16, X
     fb8:	10 e0       	ldi	r17, 0x00	; 0
     fba:	03 2e       	mov	r0, r19
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x234>
     fbe:	15 95       	asr	r17
     fc0:	07 95       	ror	r16
     fc2:	0a 94       	dec	r0
     fc4:	e2 f7       	brpl	.-8      	; 0xfbe <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x230>
     fc6:	01 70       	andi	r16, 0x01	; 1
     fc8:	23 2d       	mov	r18, r3
     fca:	4a 81       	ldd	r20, Y+2	; 0x02
     fcc:	84 81       	ldd	r24, Z+4	; 0x04
     fce:	95 81       	ldd	r25, Z+5	; 0x05
     fd0:	39 83       	std	Y+1, r19	; 0x01
     fd2:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
     fd6:	39 81       	ldd	r19, Y+1	; 0x01
     fd8:	63 2f       	mov	r22, r19
     fda:	db cf       	rjmp	.-74     	; 0xf92 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x204>
					for(int8_t Y = Circle; Y < LEDs-1-Circle; Y++) pCube->writeVoxelFast(LEDs-1-Circle, Y, Z, pCube->getVoxelFast(LEDs-1-Circle, Y+1, Z));
     fdc:	82 2d       	mov	r24, r2
     fde:	02 2c       	mov	r0, r2
     fe0:	00 0c       	add	r0, r0
     fe2:	99 0b       	sbc	r25, r25
     fe4:	88 15       	cp	r24, r8
     fe6:	99 05       	cpc	r25, r9
     fe8:	14 f5       	brge	.+68     	; 0x102e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x2a0>
     fea:	31 e0       	ldi	r19, 0x01	; 1
     fec:	32 0d       	add	r19, r2
     fee:	d7 01       	movw	r26, r14
     ff0:	ed 91       	ld	r30, X+
     ff2:	fc 91       	ld	r31, X
     ff4:	a2 81       	ldd	r26, Z+2	; 0x02
     ff6:	b3 81       	ldd	r27, Z+3	; 0x03
     ff8:	88 e0       	ldi	r24, 0x08	; 8
     ffa:	38 9f       	mul	r19, r24
     ffc:	a0 0d       	add	r26, r0
     ffe:	b1 1d       	adc	r27, r1
    1000:	11 24       	eor	r1, r1
    1002:	ac 0d       	add	r26, r12
    1004:	bd 1d       	adc	r27, r13
    1006:	0c 91       	ld	r16, X
    1008:	10 e0       	ldi	r17, 0x00	; 0
    100a:	0b 80       	ldd	r0, Y+3	; 0x03
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x284>
    100e:	15 95       	asr	r17
    1010:	07 95       	ror	r16
    1012:	0a 94       	dec	r0
    1014:	e2 f7       	brpl	.-8      	; 0x100e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x280>
    1016:	01 70       	andi	r16, 0x01	; 1
    1018:	23 2d       	mov	r18, r3
    101a:	42 2d       	mov	r20, r2
    101c:	6b 81       	ldd	r22, Y+3	; 0x03
    101e:	84 81       	ldd	r24, Z+4	; 0x04
    1020:	95 81       	ldd	r25, Z+5	; 0x05
    1022:	39 83       	std	Y+1, r19	; 0x01
    1024:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
    1028:	39 81       	ldd	r19, Y+1	; 0x01
    102a:	23 2e       	mov	r2, r19
    102c:	d7 cf       	rjmp	.-82     	; 0xfdc <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x24e>
					for(int8_t X = LEDs-1-Circle; X > Circle; X--) pCube->writeVoxelFast(X, LEDs-1-Circle, Z, pCube->getVoxelFast(X-1, LEDs-1-Circle, Z));
    102e:	2b 80       	ldd	r2, Y+3	; 0x03
    1030:	62 2d       	mov	r22, r2
    1032:	86 2f       	mov	r24, r22
    1034:	06 2e       	mov	r0, r22
    1036:	00 0c       	add	r0, r0
    1038:	99 0b       	sbc	r25, r25
    103a:	a8 16       	cp	r10, r24
    103c:	b9 06       	cpc	r11, r25
    103e:	f4 f4       	brge	.+60     	; 0x107c <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x2ee>
    1040:	3f ef       	ldi	r19, 0xFF	; 255
    1042:	36 0f       	add	r19, r22
    1044:	d7 01       	movw	r26, r14
    1046:	ed 91       	ld	r30, X+
    1048:	fc 91       	ld	r31, X
    104a:	a2 81       	ldd	r26, Z+2	; 0x02
    104c:	b3 81       	ldd	r27, Z+3	; 0x03
    104e:	a4 0d       	add	r26, r4
    1050:	b5 1d       	adc	r27, r5
    1052:	ac 0d       	add	r26, r12
    1054:	bd 1d       	adc	r27, r13
    1056:	0c 91       	ld	r16, X
    1058:	10 e0       	ldi	r17, 0x00	; 0
    105a:	03 2e       	mov	r0, r19
    105c:	02 c0       	rjmp	.+4      	; 0x1062 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x2d4>
    105e:	15 95       	asr	r17
    1060:	07 95       	ror	r16
    1062:	0a 94       	dec	r0
    1064:	e2 f7       	brpl	.-8      	; 0x105e <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x2d0>
    1066:	01 70       	andi	r16, 0x01	; 1
    1068:	23 2d       	mov	r18, r3
    106a:	4b 81       	ldd	r20, Y+3	; 0x03
    106c:	84 81       	ldd	r24, Z+4	; 0x04
    106e:	95 81       	ldd	r25, Z+5	; 0x05
    1070:	39 83       	std	Y+1, r19	; 0x01
    1072:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
    1076:	39 81       	ldd	r19, Y+1	; 0x01
    1078:	63 2f       	mov	r22, r19
    107a:	db cf       	rjmp	.-74     	; 0x1032 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x2a4>
					for(int8_t Y = LEDs-1-Circle; Y > Circle; Y--) pCube->writeVoxelFast(Circle, Y, Z, pCube->getVoxelFast(Circle, Y-1, Z));
    107c:	82 2d       	mov	r24, r2
    107e:	02 2c       	mov	r0, r2
    1080:	00 0c       	add	r0, r0
    1082:	99 0b       	sbc	r25, r25
    1084:	a8 16       	cp	r10, r24
    1086:	b9 06       	cpc	r11, r25
    1088:	14 f5       	brge	.+68     	; 0x10ce <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x340>
    108a:	3f ef       	ldi	r19, 0xFF	; 255
    108c:	32 0d       	add	r19, r2
    108e:	d7 01       	movw	r26, r14
    1090:	ed 91       	ld	r30, X+
    1092:	fc 91       	ld	r31, X
    1094:	a2 81       	ldd	r26, Z+2	; 0x02
    1096:	b3 81       	ldd	r27, Z+3	; 0x03
    1098:	88 e0       	ldi	r24, 0x08	; 8
    109a:	38 9f       	mul	r19, r24
    109c:	a0 0d       	add	r26, r0
    109e:	b1 1d       	adc	r27, r1
    10a0:	11 24       	eor	r1, r1
    10a2:	ac 0d       	add	r26, r12
    10a4:	bd 1d       	adc	r27, r13
    10a6:	0c 91       	ld	r16, X
    10a8:	10 e0       	ldi	r17, 0x00	; 0
    10aa:	0a 2c       	mov	r0, r10
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x324>
    10ae:	15 95       	asr	r17
    10b0:	07 95       	ror	r16
    10b2:	0a 94       	dec	r0
    10b4:	e2 f7       	brpl	.-8      	; 0x10ae <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x320>
    10b6:	01 70       	andi	r16, 0x01	; 1
    10b8:	23 2d       	mov	r18, r3
    10ba:	42 2d       	mov	r20, r2
    10bc:	6a 81       	ldd	r22, Y+2	; 0x02
    10be:	84 81       	ldd	r24, Z+4	; 0x04
    10c0:	95 81       	ldd	r25, Z+5	; 0x05
    10c2:	39 83       	std	Y+1, r19	; 0x01
    10c4:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7LedCube14writeVoxelFastEhhhb.isra.0>
    10c8:	39 81       	ldd	r19, Y+1	; 0x01
    10ca:	23 2e       	mov	r2, r19
    10cc:	d7 cf       	rjmp	.-82     	; 0x107c <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x2ee>
    10ce:	9f ef       	ldi	r25, 0xFF	; 255
    10d0:	c9 1a       	sub	r12, r25
    10d2:	d9 0a       	sbc	r13, r25
				}
			}
		}
		if(TRANSFORMATION_ROTATION_COUNTERCLOCKWISE == Direction) {
			if(LEDCUBE_AXIS_Z == ShiftAxis) {
				for(byte Z = 0; Z < LEDs; Z++) {
    10d4:	a8 e0       	ldi	r26, 0x08	; 8
    10d6:	ca 16       	cp	r12, r26
    10d8:	d1 04       	cpc	r13, r1
    10da:	09 f0       	breq	.+2      	; 0x10de <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x350>
    10dc:	57 cf       	rjmp	.-338    	; 0xf8c <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x1fe>
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x356>
			}
		}
		return E_OK;
	} 
	else { 
		return E_NOT_OK;
    10e0:	81 e0       	ldi	r24, 0x01	; 1
    10e2:	01 c0       	rjmp	.+2      	; 0x10e6 <_ZN14Transformation11shiftCircleE15LedCubeAxisType35TransformationRotationDirectionTypeh+0x358>
					for(int8_t X = LEDs-1-Circle; X > Circle; X--) pCube->writeVoxelFast(X, LEDs-1-Circle, Z, pCube->getVoxelFast(X-1, LEDs-1-Circle, Z));
					for(int8_t Y = LEDs-1-Circle; Y > Circle; Y--) pCube->writeVoxelFast(Circle, Y, Z, pCube->getVoxelFast(Circle, Y-1, Z));
				}
			}
		}
		return E_OK;
    10e4:	80 e0       	ldi	r24, 0x00	; 0
	} 
	else { 
		return E_NOT_OK;
	}
} /* rotateWithShift */
    10e6:	0f 90       	pop	r0
    10e8:	0f 90       	pop	r0
    10ea:	0f 90       	pop	r0
    10ec:	df 91       	pop	r29
    10ee:	cf 91       	pop	r28
    10f0:	1f 91       	pop	r17
    10f2:	0f 91       	pop	r16
    10f4:	ff 90       	pop	r15
    10f6:	ef 90       	pop	r14
    10f8:	df 90       	pop	r13
    10fa:	cf 90       	pop	r12
    10fc:	bf 90       	pop	r11
    10fe:	af 90       	pop	r10
    1100:	9f 90       	pop	r9
    1102:	8f 90       	pop	r8
    1104:	7f 90       	pop	r7
    1106:	6f 90       	pop	r6
    1108:	5f 90       	pop	r5
    110a:	4f 90       	pop	r4
    110c:	3f 90       	pop	r3
    110e:	2f 90       	pop	r2
    1110:	08 95       	ret

00001112 <__vector_18>:
    1112:	1f 92       	push	r1
    1114:	0f 92       	push	r0
    1116:	0f b6       	in	r0, 0x3f	; 63
    1118:	0f 92       	push	r0
    111a:	11 24       	eor	r1, r1
    111c:	2f 93       	push	r18
    111e:	8f 93       	push	r24
    1120:	9f 93       	push	r25
    1122:	ef 93       	push	r30
    1124:	ff 93       	push	r31
    1126:	e0 91 cb 01 	lds	r30, 0x01CB	; 0x8001cb <Serial+0x10>
    112a:	f0 91 cc 01 	lds	r31, 0x01CC	; 0x8001cc <Serial+0x11>
    112e:	80 81       	ld	r24, Z
    1130:	e0 91 d1 01 	lds	r30, 0x01D1	; 0x8001d1 <Serial+0x16>
    1134:	f0 91 d2 01 	lds	r31, 0x01D2	; 0x8001d2 <Serial+0x17>
    1138:	82 fd       	sbrc	r24, 2
    113a:	12 c0       	rjmp	.+36     	; 0x1160 <__vector_18+0x4e>
    113c:	90 81       	ld	r25, Z
    113e:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <Serial+0x19>
    1142:	8f 5f       	subi	r24, 0xFF	; 255
    1144:	8f 73       	andi	r24, 0x3F	; 63
    1146:	20 91 d5 01 	lds	r18, 0x01D5	; 0x8001d5 <Serial+0x1a>
    114a:	82 17       	cp	r24, r18
    114c:	51 f0       	breq	.+20     	; 0x1162 <__vector_18+0x50>
    114e:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <Serial+0x19>
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	e5 54       	subi	r30, 0x45	; 69
    1156:	fe 4f       	sbci	r31, 0xFE	; 254
    1158:	95 8f       	std	Z+29, r25	; 0x1d
    115a:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <Serial+0x19>
    115e:	01 c0       	rjmp	.+2      	; 0x1162 <__vector_18+0x50>
    1160:	80 81       	ld	r24, Z
    1162:	ff 91       	pop	r31
    1164:	ef 91       	pop	r30
    1166:	9f 91       	pop	r25
    1168:	8f 91       	pop	r24
    116a:	2f 91       	pop	r18
    116c:	0f 90       	pop	r0
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	0f 90       	pop	r0
    1172:	1f 90       	pop	r1
    1174:	18 95       	reti

00001176 <__vector_19>:
    1176:	1f 92       	push	r1
    1178:	0f 92       	push	r0
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	0f 92       	push	r0
    117e:	11 24       	eor	r1, r1
    1180:	2f 93       	push	r18
    1182:	3f 93       	push	r19
    1184:	4f 93       	push	r20
    1186:	5f 93       	push	r21
    1188:	6f 93       	push	r22
    118a:	7f 93       	push	r23
    118c:	8f 93       	push	r24
    118e:	9f 93       	push	r25
    1190:	af 93       	push	r26
    1192:	bf 93       	push	r27
    1194:	ef 93       	push	r30
    1196:	ff 93       	push	r31
    1198:	8b eb       	ldi	r24, 0xBB	; 187
    119a:	91 e0       	ldi	r25, 0x01	; 1
    119c:	0e 94 35 0b 	call	0x166a	; 0x166a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    11a0:	ff 91       	pop	r31
    11a2:	ef 91       	pop	r30
    11a4:	bf 91       	pop	r27
    11a6:	af 91       	pop	r26
    11a8:	9f 91       	pop	r25
    11aa:	8f 91       	pop	r24
    11ac:	7f 91       	pop	r23
    11ae:	6f 91       	pop	r22
    11b0:	5f 91       	pop	r21
    11b2:	4f 91       	pop	r20
    11b4:	3f 91       	pop	r19
    11b6:	2f 91       	pop	r18
    11b8:	0f 90       	pop	r0
    11ba:	0f be       	out	0x3f, r0	; 63
    11bc:	0f 90       	pop	r0
    11be:	1f 90       	pop	r1
    11c0:	18 95       	reti

000011c2 <_Z17Serial0_availablev>:
    11c2:	8b eb       	ldi	r24, 0xBB	; 187
    11c4:	91 e0       	ldi	r25, 0x01	; 1
    11c6:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <_ZN14HardwareSerial9availableEv>
    11ca:	21 e0       	ldi	r18, 0x01	; 1
    11cc:	89 2b       	or	r24, r25
    11ce:	09 f4       	brne	.+2      	; 0x11d2 <_Z17Serial0_availablev+0x10>
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	82 2f       	mov	r24, r18
    11d4:	08 95       	ret

000011d6 <_GLOBAL__sub_I___vector_18>:
    11d6:	eb eb       	ldi	r30, 0xBB	; 187
    11d8:	f1 e0       	ldi	r31, 0x01	; 1
    11da:	13 82       	std	Z+3, r1	; 0x03
    11dc:	12 82       	std	Z+2, r1	; 0x02
    11de:	88 ee       	ldi	r24, 0xE8	; 232
    11e0:	93 e0       	ldi	r25, 0x03	; 3
    11e2:	a0 e0       	ldi	r26, 0x00	; 0
    11e4:	b0 e0       	ldi	r27, 0x00	; 0
    11e6:	84 83       	std	Z+4, r24	; 0x04
    11e8:	95 83       	std	Z+5, r25	; 0x05
    11ea:	a6 83       	std	Z+6, r26	; 0x06
    11ec:	b7 83       	std	Z+7, r27	; 0x07
    11ee:	82 e2       	ldi	r24, 0x22	; 34
    11f0:	91 e0       	ldi	r25, 0x01	; 1
    11f2:	91 83       	std	Z+1, r25	; 0x01
    11f4:	80 83       	st	Z, r24
    11f6:	85 ec       	ldi	r24, 0xC5	; 197
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	95 87       	std	Z+13, r25	; 0x0d
    11fc:	84 87       	std	Z+12, r24	; 0x0c
    11fe:	84 ec       	ldi	r24, 0xC4	; 196
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	97 87       	std	Z+15, r25	; 0x0f
    1204:	86 87       	std	Z+14, r24	; 0x0e
    1206:	80 ec       	ldi	r24, 0xC0	; 192
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	91 8b       	std	Z+17, r25	; 0x11
    120c:	80 8b       	std	Z+16, r24	; 0x10
    120e:	81 ec       	ldi	r24, 0xC1	; 193
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	93 8b       	std	Z+19, r25	; 0x13
    1214:	82 8b       	std	Z+18, r24	; 0x12
    1216:	82 ec       	ldi	r24, 0xC2	; 194
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	95 8b       	std	Z+21, r25	; 0x15
    121c:	84 8b       	std	Z+20, r24	; 0x14
    121e:	86 ec       	ldi	r24, 0xC6	; 198
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	97 8b       	std	Z+23, r25	; 0x17
    1224:	86 8b       	std	Z+22, r24	; 0x16
    1226:	11 8e       	std	Z+25, r1	; 0x19
    1228:	12 8e       	std	Z+26, r1	; 0x1a
    122a:	13 8e       	std	Z+27, r1	; 0x1b
    122c:	14 8e       	std	Z+28, r1	; 0x1c
    122e:	08 95       	ret

00001230 <initVariant>:
    1230:	08 95       	ret

00001232 <main>:
    1232:	0e 94 29 0a 	call	0x1452	; 0x1452 <init>
    1236:	0e 94 18 09 	call	0x1230	; 0x1230 <initVariant>
    123a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <setup>
    123e:	c7 e2       	ldi	r28, 0x27	; 39
    1240:	db e0       	ldi	r29, 0x0B	; 11
    1242:	0e 94 89 04 	call	0x912	; 0x912 <loop>
    1246:	20 97       	sbiw	r28, 0x00	; 0
    1248:	e1 f3       	breq	.-8      	; 0x1242 <main+0x10>
    124a:	0e 94 27 0b 	call	0x164e	; 0x164e <_Z14serialEventRunv>
    124e:	f9 cf       	rjmp	.-14     	; 0x1242 <main+0x10>

00001250 <_ZN5Print5writeEPKhj>:
    1250:	cf 92       	push	r12
    1252:	df 92       	push	r13
    1254:	ef 92       	push	r14
    1256:	ff 92       	push	r15
    1258:	0f 93       	push	r16
    125a:	1f 93       	push	r17
    125c:	cf 93       	push	r28
    125e:	df 93       	push	r29
    1260:	6c 01       	movw	r12, r24
    1262:	eb 01       	movw	r28, r22
    1264:	7b 01       	movw	r14, r22
    1266:	e4 0e       	add	r14, r20
    1268:	f5 1e       	adc	r15, r21
    126a:	00 e0       	ldi	r16, 0x00	; 0
    126c:	10 e0       	ldi	r17, 0x00	; 0
    126e:	ce 15       	cp	r28, r14
    1270:	df 05       	cpc	r29, r15
    1272:	61 f0       	breq	.+24     	; 0x128c <_ZN5Print5writeEPKhj+0x3c>
    1274:	69 91       	ld	r22, Y+
    1276:	d6 01       	movw	r26, r12
    1278:	ed 91       	ld	r30, X+
    127a:	fc 91       	ld	r31, X
    127c:	01 90       	ld	r0, Z+
    127e:	f0 81       	ld	r31, Z
    1280:	e0 2d       	mov	r30, r0
    1282:	c6 01       	movw	r24, r12
    1284:	09 95       	icall
    1286:	08 0f       	add	r16, r24
    1288:	19 1f       	adc	r17, r25
    128a:	f1 cf       	rjmp	.-30     	; 0x126e <_ZN5Print5writeEPKhj+0x1e>
    128c:	c8 01       	movw	r24, r16
    128e:	df 91       	pop	r29
    1290:	cf 91       	pop	r28
    1292:	1f 91       	pop	r17
    1294:	0f 91       	pop	r16
    1296:	ff 90       	pop	r15
    1298:	ef 90       	pop	r14
    129a:	df 90       	pop	r13
    129c:	cf 90       	pop	r12
    129e:	08 95       	ret

000012a0 <_ZN5Print5writeEPKc>:
    12a0:	61 15       	cp	r22, r1
    12a2:	71 05       	cpc	r23, r1
    12a4:	79 f0       	breq	.+30     	; 0x12c4 <_ZN5Print5writeEPKc+0x24>
    12a6:	fb 01       	movw	r30, r22
    12a8:	01 90       	ld	r0, Z+
    12aa:	00 20       	and	r0, r0
    12ac:	e9 f7       	brne	.-6      	; 0x12a8 <_ZN5Print5writeEPKc+0x8>
    12ae:	31 97       	sbiw	r30, 0x01	; 1
    12b0:	af 01       	movw	r20, r30
    12b2:	46 1b       	sub	r20, r22
    12b4:	57 0b       	sbc	r21, r23
    12b6:	dc 01       	movw	r26, r24
    12b8:	ed 91       	ld	r30, X+
    12ba:	fc 91       	ld	r31, X
    12bc:	02 80       	ldd	r0, Z+2	; 0x02
    12be:	f3 81       	ldd	r31, Z+3	; 0x03
    12c0:	e0 2d       	mov	r30, r0
    12c2:	09 94       	ijmp
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	08 95       	ret

000012ca <_ZN5Print5printEc>:
    12ca:	dc 01       	movw	r26, r24
    12cc:	ed 91       	ld	r30, X+
    12ce:	fc 91       	ld	r31, X
    12d0:	01 90       	ld	r0, Z+
    12d2:	f0 81       	ld	r31, Z
    12d4:	e0 2d       	mov	r30, r0
    12d6:	09 94       	ijmp

000012d8 <_ZN5Print7printlnEv>:
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	ec 01       	movw	r28, r24
    12e2:	6d e0       	ldi	r22, 0x0D	; 13
    12e4:	0e 94 65 09 	call	0x12ca	; 0x12ca <_ZN5Print5printEc>
    12e8:	8c 01       	movw	r16, r24
    12ea:	6a e0       	ldi	r22, 0x0A	; 10
    12ec:	ce 01       	movw	r24, r28
    12ee:	0e 94 65 09 	call	0x12ca	; 0x12ca <_ZN5Print5printEc>
    12f2:	80 0f       	add	r24, r16
    12f4:	91 1f       	adc	r25, r17
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	1f 91       	pop	r17
    12fc:	0f 91       	pop	r16
    12fe:	08 95       	ret

00001300 <_ZN5Print7printlnEPKc>:
    1300:	0f 93       	push	r16
    1302:	1f 93       	push	r17
    1304:	cf 93       	push	r28
    1306:	df 93       	push	r29
    1308:	ec 01       	movw	r28, r24
    130a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <_ZN5Print5writeEPKc>
    130e:	8c 01       	movw	r16, r24
    1310:	ce 01       	movw	r24, r28
    1312:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <_ZN5Print7printlnEv>
    1316:	80 0f       	add	r24, r16
    1318:	91 1f       	adc	r25, r17
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	08 95       	ret

00001324 <__vector_16>:
    1324:	1f 92       	push	r1
    1326:	0f 92       	push	r0
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	0f 92       	push	r0
    132c:	11 24       	eor	r1, r1
    132e:	2f 93       	push	r18
    1330:	3f 93       	push	r19
    1332:	8f 93       	push	r24
    1334:	9f 93       	push	r25
    1336:	af 93       	push	r26
    1338:	bf 93       	push	r27
    133a:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <timer0_millis>
    133e:	90 91 5a 02 	lds	r25, 0x025A	; 0x80025a <timer0_millis+0x1>
    1342:	a0 91 5b 02 	lds	r26, 0x025B	; 0x80025b <timer0_millis+0x2>
    1346:	b0 91 5c 02 	lds	r27, 0x025C	; 0x80025c <timer0_millis+0x3>
    134a:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <timer0_fract>
    134e:	23 e0       	ldi	r18, 0x03	; 3
    1350:	23 0f       	add	r18, r19
    1352:	2d 37       	cpi	r18, 0x7D	; 125
    1354:	20 f4       	brcc	.+8      	; 0x135e <__vector_16+0x3a>
    1356:	01 96       	adiw	r24, 0x01	; 1
    1358:	a1 1d       	adc	r26, r1
    135a:	b1 1d       	adc	r27, r1
    135c:	05 c0       	rjmp	.+10     	; 0x1368 <__vector_16+0x44>
    135e:	26 e8       	ldi	r18, 0x86	; 134
    1360:	23 0f       	add	r18, r19
    1362:	02 96       	adiw	r24, 0x02	; 2
    1364:	a1 1d       	adc	r26, r1
    1366:	b1 1d       	adc	r27, r1
    1368:	20 93 58 02 	sts	0x0258, r18	; 0x800258 <timer0_fract>
    136c:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <timer0_millis>
    1370:	90 93 5a 02 	sts	0x025A, r25	; 0x80025a <timer0_millis+0x1>
    1374:	a0 93 5b 02 	sts	0x025B, r26	; 0x80025b <timer0_millis+0x2>
    1378:	b0 93 5c 02 	sts	0x025C, r27	; 0x80025c <timer0_millis+0x3>
    137c:	80 91 5d 02 	lds	r24, 0x025D	; 0x80025d <timer0_overflow_count>
    1380:	90 91 5e 02 	lds	r25, 0x025E	; 0x80025e <timer0_overflow_count+0x1>
    1384:	a0 91 5f 02 	lds	r26, 0x025F	; 0x80025f <timer0_overflow_count+0x2>
    1388:	b0 91 60 02 	lds	r27, 0x0260	; 0x800260 <timer0_overflow_count+0x3>
    138c:	01 96       	adiw	r24, 0x01	; 1
    138e:	a1 1d       	adc	r26, r1
    1390:	b1 1d       	adc	r27, r1
    1392:	80 93 5d 02 	sts	0x025D, r24	; 0x80025d <timer0_overflow_count>
    1396:	90 93 5e 02 	sts	0x025E, r25	; 0x80025e <timer0_overflow_count+0x1>
    139a:	a0 93 5f 02 	sts	0x025F, r26	; 0x80025f <timer0_overflow_count+0x2>
    139e:	b0 93 60 02 	sts	0x0260, r27	; 0x800260 <timer0_overflow_count+0x3>
    13a2:	bf 91       	pop	r27
    13a4:	af 91       	pop	r26
    13a6:	9f 91       	pop	r25
    13a8:	8f 91       	pop	r24
    13aa:	3f 91       	pop	r19
    13ac:	2f 91       	pop	r18
    13ae:	0f 90       	pop	r0
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	0f 90       	pop	r0
    13b4:	1f 90       	pop	r1
    13b6:	18 95       	reti

000013b8 <micros>:
    13b8:	3f b7       	in	r19, 0x3f	; 63
    13ba:	f8 94       	cli
    13bc:	80 91 5d 02 	lds	r24, 0x025D	; 0x80025d <timer0_overflow_count>
    13c0:	90 91 5e 02 	lds	r25, 0x025E	; 0x80025e <timer0_overflow_count+0x1>
    13c4:	a0 91 5f 02 	lds	r26, 0x025F	; 0x80025f <timer0_overflow_count+0x2>
    13c8:	b0 91 60 02 	lds	r27, 0x0260	; 0x800260 <timer0_overflow_count+0x3>
    13cc:	26 b5       	in	r18, 0x26	; 38
    13ce:	a8 9b       	sbis	0x15, 0	; 21
    13d0:	05 c0       	rjmp	.+10     	; 0x13dc <micros+0x24>
    13d2:	2f 3f       	cpi	r18, 0xFF	; 255
    13d4:	19 f0       	breq	.+6      	; 0x13dc <micros+0x24>
    13d6:	01 96       	adiw	r24, 0x01	; 1
    13d8:	a1 1d       	adc	r26, r1
    13da:	b1 1d       	adc	r27, r1
    13dc:	3f bf       	out	0x3f, r19	; 63
    13de:	ba 2f       	mov	r27, r26
    13e0:	a9 2f       	mov	r26, r25
    13e2:	98 2f       	mov	r25, r24
    13e4:	88 27       	eor	r24, r24
    13e6:	82 0f       	add	r24, r18
    13e8:	91 1d       	adc	r25, r1
    13ea:	a1 1d       	adc	r26, r1
    13ec:	b1 1d       	adc	r27, r1
    13ee:	bc 01       	movw	r22, r24
    13f0:	cd 01       	movw	r24, r26
    13f2:	42 e0       	ldi	r20, 0x02	; 2
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	88 1f       	adc	r24, r24
    13fa:	99 1f       	adc	r25, r25
    13fc:	4a 95       	dec	r20
    13fe:	d1 f7       	brne	.-12     	; 0x13f4 <micros+0x3c>
    1400:	08 95       	ret

00001402 <delay>:
    1402:	cf 92       	push	r12
    1404:	df 92       	push	r13
    1406:	ef 92       	push	r14
    1408:	ff 92       	push	r15
    140a:	cf 93       	push	r28
    140c:	df 93       	push	r29
    140e:	6b 01       	movw	r12, r22
    1410:	7c 01       	movw	r14, r24
    1412:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <micros>
    1416:	eb 01       	movw	r28, r22
    1418:	c1 14       	cp	r12, r1
    141a:	d1 04       	cpc	r13, r1
    141c:	e1 04       	cpc	r14, r1
    141e:	f1 04       	cpc	r15, r1
    1420:	89 f0       	breq	.+34     	; 0x1444 <delay+0x42>
    1422:	0e 94 c0 0b 	call	0x1780	; 0x1780 <yield>
    1426:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <micros>
    142a:	6c 1b       	sub	r22, r28
    142c:	7d 0b       	sbc	r23, r29
    142e:	68 3e       	cpi	r22, 0xE8	; 232
    1430:	73 40       	sbci	r23, 0x03	; 3
    1432:	90 f3       	brcs	.-28     	; 0x1418 <delay+0x16>
    1434:	81 e0       	ldi	r24, 0x01	; 1
    1436:	c8 1a       	sub	r12, r24
    1438:	d1 08       	sbc	r13, r1
    143a:	e1 08       	sbc	r14, r1
    143c:	f1 08       	sbc	r15, r1
    143e:	c8 51       	subi	r28, 0x18	; 24
    1440:	dc 4f       	sbci	r29, 0xFC	; 252
    1442:	ea cf       	rjmp	.-44     	; 0x1418 <delay+0x16>
    1444:	df 91       	pop	r29
    1446:	cf 91       	pop	r28
    1448:	ff 90       	pop	r15
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	08 95       	ret

00001452 <init>:
    1452:	78 94       	sei
    1454:	84 b5       	in	r24, 0x24	; 36
    1456:	82 60       	ori	r24, 0x02	; 2
    1458:	84 bd       	out	0x24, r24	; 36
    145a:	84 b5       	in	r24, 0x24	; 36
    145c:	81 60       	ori	r24, 0x01	; 1
    145e:	84 bd       	out	0x24, r24	; 36
    1460:	85 b5       	in	r24, 0x25	; 37
    1462:	82 60       	ori	r24, 0x02	; 2
    1464:	85 bd       	out	0x25, r24	; 37
    1466:	85 b5       	in	r24, 0x25	; 37
    1468:	81 60       	ori	r24, 0x01	; 1
    146a:	85 bd       	out	0x25, r24	; 37
    146c:	ee e6       	ldi	r30, 0x6E	; 110
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	80 81       	ld	r24, Z
    1472:	81 60       	ori	r24, 0x01	; 1
    1474:	80 83       	st	Z, r24
    1476:	e1 e8       	ldi	r30, 0x81	; 129
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	10 82       	st	Z, r1
    147c:	80 81       	ld	r24, Z
    147e:	82 60       	ori	r24, 0x02	; 2
    1480:	80 83       	st	Z, r24
    1482:	80 81       	ld	r24, Z
    1484:	81 60       	ori	r24, 0x01	; 1
    1486:	80 83       	st	Z, r24
    1488:	e0 e8       	ldi	r30, 0x80	; 128
    148a:	f0 e0       	ldi	r31, 0x00	; 0
    148c:	80 81       	ld	r24, Z
    148e:	81 60       	ori	r24, 0x01	; 1
    1490:	80 83       	st	Z, r24
    1492:	e1 eb       	ldi	r30, 0xB1	; 177
    1494:	f0 e0       	ldi	r31, 0x00	; 0
    1496:	80 81       	ld	r24, Z
    1498:	84 60       	ori	r24, 0x04	; 4
    149a:	80 83       	st	Z, r24
    149c:	e0 eb       	ldi	r30, 0xB0	; 176
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	80 81       	ld	r24, Z
    14a2:	81 60       	ori	r24, 0x01	; 1
    14a4:	80 83       	st	Z, r24
    14a6:	ea e7       	ldi	r30, 0x7A	; 122
    14a8:	f0 e0       	ldi	r31, 0x00	; 0
    14aa:	80 81       	ld	r24, Z
    14ac:	84 60       	ori	r24, 0x04	; 4
    14ae:	80 83       	st	Z, r24
    14b0:	80 81       	ld	r24, Z
    14b2:	82 60       	ori	r24, 0x02	; 2
    14b4:	80 83       	st	Z, r24
    14b6:	80 81       	ld	r24, Z
    14b8:	81 60       	ori	r24, 0x01	; 1
    14ba:	80 83       	st	Z, r24
    14bc:	80 81       	ld	r24, Z
    14be:	80 68       	ori	r24, 0x80	; 128
    14c0:	80 83       	st	Z, r24
    14c2:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    14c6:	08 95       	ret

000014c8 <turnOffPWM>:
    14c8:	83 30       	cpi	r24, 0x03	; 3
    14ca:	81 f0       	breq	.+32     	; 0x14ec <turnOffPWM+0x24>
    14cc:	28 f4       	brcc	.+10     	; 0x14d8 <turnOffPWM+0x10>
    14ce:	81 30       	cpi	r24, 0x01	; 1
    14d0:	99 f0       	breq	.+38     	; 0x14f8 <turnOffPWM+0x30>
    14d2:	82 30       	cpi	r24, 0x02	; 2
    14d4:	a1 f0       	breq	.+40     	; 0x14fe <turnOffPWM+0x36>
    14d6:	08 95       	ret
    14d8:	87 30       	cpi	r24, 0x07	; 7
    14da:	a9 f0       	breq	.+42     	; 0x1506 <turnOffPWM+0x3e>
    14dc:	88 30       	cpi	r24, 0x08	; 8
    14de:	b9 f0       	breq	.+46     	; 0x150e <turnOffPWM+0x46>
    14e0:	84 30       	cpi	r24, 0x04	; 4
    14e2:	d1 f4       	brne	.+52     	; 0x1518 <turnOffPWM+0x50>
    14e4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    14e8:	8f 7d       	andi	r24, 0xDF	; 223
    14ea:	03 c0       	rjmp	.+6      	; 0x14f2 <turnOffPWM+0x2a>
    14ec:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    14f0:	8f 77       	andi	r24, 0x7F	; 127
    14f2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    14f6:	08 95       	ret
    14f8:	84 b5       	in	r24, 0x24	; 36
    14fa:	8f 77       	andi	r24, 0x7F	; 127
    14fc:	02 c0       	rjmp	.+4      	; 0x1502 <turnOffPWM+0x3a>
    14fe:	84 b5       	in	r24, 0x24	; 36
    1500:	8f 7d       	andi	r24, 0xDF	; 223
    1502:	84 bd       	out	0x24, r24	; 36
    1504:	08 95       	ret
    1506:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    150a:	8f 77       	andi	r24, 0x7F	; 127
    150c:	03 c0       	rjmp	.+6      	; 0x1514 <turnOffPWM+0x4c>
    150e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1512:	8f 7d       	andi	r24, 0xDF	; 223
    1514:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1518:	08 95       	ret

0000151a <pinMode>:
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	fc 01       	movw	r30, r24
    1522:	e4 58       	subi	r30, 0x84	; 132
    1524:	f7 4f       	sbci	r31, 0xF7	; 247
    1526:	24 91       	lpm	r18, Z
    1528:	fc 01       	movw	r30, r24
    152a:	e0 57       	subi	r30, 0x70	; 112
    152c:	f7 4f       	sbci	r31, 0xF7	; 247
    152e:	84 91       	lpm	r24, Z
    1530:	88 23       	and	r24, r24
    1532:	61 f1       	breq	.+88     	; 0x158c <pinMode+0x72>
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	88 0f       	add	r24, r24
    1538:	99 1f       	adc	r25, r25
    153a:	fc 01       	movw	r30, r24
    153c:	e2 55       	subi	r30, 0x52	; 82
    153e:	f7 4f       	sbci	r31, 0xF7	; 247
    1540:	c5 91       	lpm	r28, Z+
    1542:	d4 91       	lpm	r29, Z
    1544:	fc 01       	movw	r30, r24
    1546:	ec 55       	subi	r30, 0x5C	; 92
    1548:	f7 4f       	sbci	r31, 0xF7	; 247
    154a:	a5 91       	lpm	r26, Z+
    154c:	b4 91       	lpm	r27, Z
    154e:	61 11       	cpse	r22, r1
    1550:	09 c0       	rjmp	.+18     	; 0x1564 <pinMode+0x4a>
    1552:	9f b7       	in	r25, 0x3f	; 63
    1554:	f8 94       	cli
    1556:	88 81       	ld	r24, Y
    1558:	20 95       	com	r18
    155a:	82 23       	and	r24, r18
    155c:	88 83       	st	Y, r24
    155e:	ec 91       	ld	r30, X
    1560:	2e 23       	and	r18, r30
    1562:	0b c0       	rjmp	.+22     	; 0x157a <pinMode+0x60>
    1564:	62 30       	cpi	r22, 0x02	; 2
    1566:	61 f4       	brne	.+24     	; 0x1580 <pinMode+0x66>
    1568:	9f b7       	in	r25, 0x3f	; 63
    156a:	f8 94       	cli
    156c:	38 81       	ld	r19, Y
    156e:	82 2f       	mov	r24, r18
    1570:	80 95       	com	r24
    1572:	83 23       	and	r24, r19
    1574:	88 83       	st	Y, r24
    1576:	ec 91       	ld	r30, X
    1578:	2e 2b       	or	r18, r30
    157a:	2c 93       	st	X, r18
    157c:	9f bf       	out	0x3f, r25	; 63
    157e:	06 c0       	rjmp	.+12     	; 0x158c <pinMode+0x72>
    1580:	8f b7       	in	r24, 0x3f	; 63
    1582:	f8 94       	cli
    1584:	e8 81       	ld	r30, Y
    1586:	2e 2b       	or	r18, r30
    1588:	28 83       	st	Y, r18
    158a:	8f bf       	out	0x3f, r24	; 63
    158c:	df 91       	pop	r29
    158e:	cf 91       	pop	r28
    1590:	08 95       	ret

00001592 <digitalWrite>:
    1592:	1f 93       	push	r17
    1594:	cf 93       	push	r28
    1596:	df 93       	push	r29
    1598:	28 2f       	mov	r18, r24
    159a:	30 e0       	ldi	r19, 0x00	; 0
    159c:	f9 01       	movw	r30, r18
    159e:	e8 59       	subi	r30, 0x98	; 152
    15a0:	f7 4f       	sbci	r31, 0xF7	; 247
    15a2:	84 91       	lpm	r24, Z
    15a4:	f9 01       	movw	r30, r18
    15a6:	e4 58       	subi	r30, 0x84	; 132
    15a8:	f7 4f       	sbci	r31, 0xF7	; 247
    15aa:	d4 91       	lpm	r29, Z
    15ac:	f9 01       	movw	r30, r18
    15ae:	e0 57       	subi	r30, 0x70	; 112
    15b0:	f7 4f       	sbci	r31, 0xF7	; 247
    15b2:	c4 91       	lpm	r28, Z
    15b4:	cc 23       	and	r28, r28
    15b6:	c9 f0       	breq	.+50     	; 0x15ea <digitalWrite+0x58>
    15b8:	16 2f       	mov	r17, r22
    15ba:	81 11       	cpse	r24, r1
    15bc:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <turnOffPWM>
    15c0:	ec 2f       	mov	r30, r28
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	ee 0f       	add	r30, r30
    15c6:	ff 1f       	adc	r31, r31
    15c8:	ec 55       	subi	r30, 0x5C	; 92
    15ca:	f7 4f       	sbci	r31, 0xF7	; 247
    15cc:	a5 91       	lpm	r26, Z+
    15ce:	b4 91       	lpm	r27, Z
    15d0:	8f b7       	in	r24, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	11 11       	cpse	r17, r1
    15d6:	05 c0       	rjmp	.+10     	; 0x15e2 <digitalWrite+0x50>
    15d8:	9c 91       	ld	r25, X
    15da:	ed 2f       	mov	r30, r29
    15dc:	e0 95       	com	r30
    15de:	e9 23       	and	r30, r25
    15e0:	02 c0       	rjmp	.+4      	; 0x15e6 <digitalWrite+0x54>
    15e2:	ec 91       	ld	r30, X
    15e4:	ed 2b       	or	r30, r29
    15e6:	ec 93       	st	X, r30
    15e8:	8f bf       	out	0x3f, r24	; 63
    15ea:	df 91       	pop	r29
    15ec:	cf 91       	pop	r28
    15ee:	1f 91       	pop	r17
    15f0:	08 95       	ret

000015f2 <_ZN14HardwareSerial9availableEv>:
    15f2:	fc 01       	movw	r30, r24
    15f4:	91 8d       	ldd	r25, Z+25	; 0x19
    15f6:	22 8d       	ldd	r18, Z+26	; 0x1a
    15f8:	89 2f       	mov	r24, r25
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	80 5c       	subi	r24, 0xC0	; 192
    15fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1600:	82 1b       	sub	r24, r18
    1602:	91 09       	sbc	r25, r1
    1604:	8f 73       	andi	r24, 0x3F	; 63
    1606:	99 27       	eor	r25, r25
    1608:	08 95       	ret

0000160a <_ZN14HardwareSerial4peekEv>:
    160a:	fc 01       	movw	r30, r24
    160c:	91 8d       	ldd	r25, Z+25	; 0x19
    160e:	82 8d       	ldd	r24, Z+26	; 0x1a
    1610:	98 17       	cp	r25, r24
    1612:	31 f0       	breq	.+12     	; 0x1620 <_ZN14HardwareSerial4peekEv+0x16>
    1614:	82 8d       	ldd	r24, Z+26	; 0x1a
    1616:	e8 0f       	add	r30, r24
    1618:	f1 1d       	adc	r31, r1
    161a:	85 8d       	ldd	r24, Z+29	; 0x1d
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	08 95       	ret
    1620:	8f ef       	ldi	r24, 0xFF	; 255
    1622:	9f ef       	ldi	r25, 0xFF	; 255
    1624:	08 95       	ret

00001626 <_ZN14HardwareSerial4readEv>:
    1626:	fc 01       	movw	r30, r24
    1628:	91 8d       	ldd	r25, Z+25	; 0x19
    162a:	82 8d       	ldd	r24, Z+26	; 0x1a
    162c:	98 17       	cp	r25, r24
    162e:	61 f0       	breq	.+24     	; 0x1648 <_ZN14HardwareSerial4readEv+0x22>
    1630:	82 8d       	ldd	r24, Z+26	; 0x1a
    1632:	df 01       	movw	r26, r30
    1634:	a8 0f       	add	r26, r24
    1636:	b1 1d       	adc	r27, r1
    1638:	5d 96       	adiw	r26, 0x1d	; 29
    163a:	8c 91       	ld	r24, X
    163c:	92 8d       	ldd	r25, Z+26	; 0x1a
    163e:	9f 5f       	subi	r25, 0xFF	; 255
    1640:	9f 73       	andi	r25, 0x3F	; 63
    1642:	92 8f       	std	Z+26, r25	; 0x1a
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	08 95       	ret
    1648:	8f ef       	ldi	r24, 0xFF	; 255
    164a:	9f ef       	ldi	r25, 0xFF	; 255
    164c:	08 95       	ret

0000164e <_Z14serialEventRunv>:
    164e:	81 ee       	ldi	r24, 0xE1	; 225
    1650:	98 e0       	ldi	r25, 0x08	; 8
    1652:	89 2b       	or	r24, r25
    1654:	49 f0       	breq	.+18     	; 0x1668 <_Z14serialEventRunv+0x1a>
    1656:	80 e0       	ldi	r24, 0x00	; 0
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	89 2b       	or	r24, r25
    165c:	29 f0       	breq	.+10     	; 0x1668 <_Z14serialEventRunv+0x1a>
    165e:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <_Z17Serial0_availablev>
    1662:	81 11       	cpse	r24, r1
    1664:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    1668:	08 95       	ret

0000166a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
    166a:	fc 01       	movw	r30, r24
    166c:	84 8d       	ldd	r24, Z+28	; 0x1c
    166e:	df 01       	movw	r26, r30
    1670:	a8 0f       	add	r26, r24
    1672:	b1 1d       	adc	r27, r1
    1674:	a3 5a       	subi	r26, 0xA3	; 163
    1676:	bf 4f       	sbci	r27, 0xFF	; 255
    1678:	2c 91       	ld	r18, X
    167a:	84 8d       	ldd	r24, Z+28	; 0x1c
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	01 96       	adiw	r24, 0x01	; 1
    1680:	8f 73       	andi	r24, 0x3F	; 63
    1682:	99 27       	eor	r25, r25
    1684:	84 8f       	std	Z+28, r24	; 0x1c
    1686:	a6 89       	ldd	r26, Z+22	; 0x16
    1688:	b7 89       	ldd	r27, Z+23	; 0x17
    168a:	2c 93       	st	X, r18
    168c:	a0 89       	ldd	r26, Z+16	; 0x10
    168e:	b1 89       	ldd	r27, Z+17	; 0x11
    1690:	8c 91       	ld	r24, X
    1692:	80 64       	ori	r24, 0x40	; 64
    1694:	8c 93       	st	X, r24
    1696:	93 8d       	ldd	r25, Z+27	; 0x1b
    1698:	84 8d       	ldd	r24, Z+28	; 0x1c
    169a:	98 13       	cpse	r25, r24
    169c:	06 c0       	rjmp	.+12     	; 0x16aa <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    169e:	02 88       	ldd	r0, Z+18	; 0x12
    16a0:	f3 89       	ldd	r31, Z+19	; 0x13
    16a2:	e0 2d       	mov	r30, r0
    16a4:	80 81       	ld	r24, Z
    16a6:	8f 7d       	andi	r24, 0xDF	; 223
    16a8:	80 83       	st	Z, r24
    16aa:	08 95       	ret

000016ac <_ZN14HardwareSerial5flushEv>:
    16ac:	cf 93       	push	r28
    16ae:	df 93       	push	r29
    16b0:	ec 01       	movw	r28, r24
    16b2:	88 8d       	ldd	r24, Y+24	; 0x18
    16b4:	88 23       	and	r24, r24
    16b6:	c9 f0       	breq	.+50     	; 0x16ea <_ZN14HardwareSerial5flushEv+0x3e>
    16b8:	ea 89       	ldd	r30, Y+18	; 0x12
    16ba:	fb 89       	ldd	r31, Y+19	; 0x13
    16bc:	80 81       	ld	r24, Z
    16be:	85 fd       	sbrc	r24, 5
    16c0:	05 c0       	rjmp	.+10     	; 0x16cc <_ZN14HardwareSerial5flushEv+0x20>
    16c2:	a8 89       	ldd	r26, Y+16	; 0x10
    16c4:	b9 89       	ldd	r27, Y+17	; 0x11
    16c6:	8c 91       	ld	r24, X
    16c8:	86 fd       	sbrc	r24, 6
    16ca:	0f c0       	rjmp	.+30     	; 0x16ea <_ZN14HardwareSerial5flushEv+0x3e>
    16cc:	0f b6       	in	r0, 0x3f	; 63
    16ce:	07 fc       	sbrc	r0, 7
    16d0:	f5 cf       	rjmp	.-22     	; 0x16bc <_ZN14HardwareSerial5flushEv+0x10>
    16d2:	80 81       	ld	r24, Z
    16d4:	85 ff       	sbrs	r24, 5
    16d6:	f2 cf       	rjmp	.-28     	; 0x16bc <_ZN14HardwareSerial5flushEv+0x10>
    16d8:	a8 89       	ldd	r26, Y+16	; 0x10
    16da:	b9 89       	ldd	r27, Y+17	; 0x11
    16dc:	8c 91       	ld	r24, X
    16de:	85 ff       	sbrs	r24, 5
    16e0:	ed cf       	rjmp	.-38     	; 0x16bc <_ZN14HardwareSerial5flushEv+0x10>
    16e2:	ce 01       	movw	r24, r28
    16e4:	0e 94 35 0b 	call	0x166a	; 0x166a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    16e8:	e7 cf       	rjmp	.-50     	; 0x16b8 <_ZN14HardwareSerial5flushEv+0xc>
    16ea:	df 91       	pop	r29
    16ec:	cf 91       	pop	r28
    16ee:	08 95       	ret

000016f0 <_ZN14HardwareSerial5writeEh>:
    16f0:	ef 92       	push	r14
    16f2:	ff 92       	push	r15
    16f4:	0f 93       	push	r16
    16f6:	1f 93       	push	r17
    16f8:	cf 93       	push	r28
    16fa:	df 93       	push	r29
    16fc:	ec 01       	movw	r28, r24
    16fe:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1700:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1702:	98 13       	cpse	r25, r24
    1704:	05 c0       	rjmp	.+10     	; 0x1710 <_ZN14HardwareSerial5writeEh+0x20>
    1706:	e8 89       	ldd	r30, Y+16	; 0x10
    1708:	f9 89       	ldd	r31, Y+17	; 0x11
    170a:	80 81       	ld	r24, Z
    170c:	85 fd       	sbrc	r24, 5
    170e:	27 c0       	rjmp	.+78     	; 0x175e <_ZN14HardwareSerial5writeEh+0x6e>
    1710:	f6 2e       	mov	r15, r22
    1712:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1714:	10 e0       	ldi	r17, 0x00	; 0
    1716:	0f 5f       	subi	r16, 0xFF	; 255
    1718:	1f 4f       	sbci	r17, 0xFF	; 255
    171a:	0f 73       	andi	r16, 0x3F	; 63
    171c:	11 27       	eor	r17, r17
    171e:	e0 2e       	mov	r14, r16
    1720:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1722:	e8 12       	cpse	r14, r24
    1724:	0c c0       	rjmp	.+24     	; 0x173e <_ZN14HardwareSerial5writeEh+0x4e>
    1726:	0f b6       	in	r0, 0x3f	; 63
    1728:	07 fc       	sbrc	r0, 7
    172a:	fa cf       	rjmp	.-12     	; 0x1720 <_ZN14HardwareSerial5writeEh+0x30>
    172c:	e8 89       	ldd	r30, Y+16	; 0x10
    172e:	f9 89       	ldd	r31, Y+17	; 0x11
    1730:	80 81       	ld	r24, Z
    1732:	85 ff       	sbrs	r24, 5
    1734:	f5 cf       	rjmp	.-22     	; 0x1720 <_ZN14HardwareSerial5writeEh+0x30>
    1736:	ce 01       	movw	r24, r28
    1738:	0e 94 35 0b 	call	0x166a	; 0x166a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    173c:	f1 cf       	rjmp	.-30     	; 0x1720 <_ZN14HardwareSerial5writeEh+0x30>
    173e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1740:	fe 01       	movw	r30, r28
    1742:	e8 0f       	add	r30, r24
    1744:	f1 1d       	adc	r31, r1
    1746:	e3 5a       	subi	r30, 0xA3	; 163
    1748:	ff 4f       	sbci	r31, 0xFF	; 255
    174a:	f0 82       	st	Z, r15
    174c:	0b 8f       	std	Y+27, r16	; 0x1b
    174e:	ea 89       	ldd	r30, Y+18	; 0x12
    1750:	fb 89       	ldd	r31, Y+19	; 0x13
    1752:	80 81       	ld	r24, Z
    1754:	80 62       	ori	r24, 0x20	; 32
    1756:	80 83       	st	Z, r24
    1758:	81 e0       	ldi	r24, 0x01	; 1
    175a:	88 8f       	std	Y+24, r24	; 0x18
    175c:	08 c0       	rjmp	.+16     	; 0x176e <_ZN14HardwareSerial5writeEh+0x7e>
    175e:	ee 89       	ldd	r30, Y+22	; 0x16
    1760:	ff 89       	ldd	r31, Y+23	; 0x17
    1762:	60 83       	st	Z, r22
    1764:	e8 89       	ldd	r30, Y+16	; 0x10
    1766:	f9 89       	ldd	r31, Y+17	; 0x11
    1768:	80 81       	ld	r24, Z
    176a:	80 64       	ori	r24, 0x40	; 64
    176c:	80 83       	st	Z, r24
    176e:	81 e0       	ldi	r24, 0x01	; 1
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	df 91       	pop	r29
    1774:	cf 91       	pop	r28
    1776:	1f 91       	pop	r17
    1778:	0f 91       	pop	r16
    177a:	ff 90       	pop	r15
    177c:	ef 90       	pop	r14
    177e:	08 95       	ret

00001780 <yield>:
    1780:	08 95       	ret

00001782 <__tablejump2__>:
    1782:	ee 0f       	add	r30, r30
    1784:	ff 1f       	adc	r31, r31
    1786:	05 90       	lpm	r0, Z+
    1788:	f4 91       	lpm	r31, Z
    178a:	e0 2d       	mov	r30, r0
    178c:	09 94       	ijmp

0000178e <__do_global_dtors>:
    178e:	14 e0       	ldi	r17, 0x04	; 4
    1790:	ce e5       	ldi	r28, 0x5E	; 94
    1792:	d4 e0       	ldi	r29, 0x04	; 4
    1794:	04 c0       	rjmp	.+8      	; 0x179e <__do_global_dtors+0x10>
    1796:	fe 01       	movw	r30, r28
    1798:	0e 94 c1 0b 	call	0x1782	; 0x1782 <__tablejump2__>
    179c:	21 96       	adiw	r28, 0x01	; 1
    179e:	cf 35       	cpi	r28, 0x5F	; 95
    17a0:	d1 07       	cpc	r29, r17
    17a2:	c9 f7       	brne	.-14     	; 0x1796 <__do_global_dtors+0x8>
    17a4:	f8 94       	cli

000017a6 <__stop_program>:
    17a6:	ff cf       	rjmp	.-2      	; 0x17a6 <__stop_program>
